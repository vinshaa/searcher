XML-RPC                    From Wikipedia, the free encyclopedia                            Jump to:     navigation,      search          XML-RPC is a remote procedure call (RPC) protocol which uses XML to encode its calls and HTTP as a transport mechanism.[1] "XML-RPC" also refers generically to the use of XML for remote procedure call, independently of the specific protocol. This article is about the protocol named "XML-RPC".    Contents  1 History2 Usage3 Data types4 Examples5 Criticism6 Implementations 6.1 Ruby6.2 Python6.3 C++6.4 Objective-C / GNUstep / Cocoa6.5 Erlang6.6 Groovy6.7 Java6.8 JavaScript6.9 XMPP6.10 PHP6.11 Perl6.12 Other 7 See also8 References9 External links   History[edit] XML-RPC, the protocol, was created in 1998 by Dave Winer of UserLand Software and Microsoft.[2] As new functionality was introduced, the standard evolved into what is now SOAP. The generic use of XML for remote procedure call (RPC) was patented by Phillip Merrick, Stewart Allen, and Joseph Lapp in April 2006, claiming benefit to a provisional application filed in March 1998. The patent is assigned to webMethods, located in Fairfax, VA.[3] Usage[edit] XML-RPC works by sending a HTTP request to a server implementing the protocol. The client in that case is typically software wanting to call a single method of a remote system. Multiple input parameters can be passed to the remote method, one return value is returned. The parameter types allow nesting of parameters into maps and lists, thus larger structures can be transported. Therefore, XML-RPC can be used to transport objects or structures both as input and as output parameters. Identification of clients for authorization purposes can be achieved using popular HTTP security methods. Basic access authentication is used for identification, HTTPS is used when identification (via certificates) and encrypted messages are needed. Both methods can be combined. In comparison to REST, where resource representations (documents) are transferred, XML-RPC is designed to call methods. XML-RPC is simpler to use and easier to understand than SOAP because it allows only one way to serialize methods, whereas SOAP defines multiple different encodingshas a simpler security modeldoes not require (nor support) the creation of WSDL service descriptions, although XRDL provides a simple subset of the functionality provided by WSDL JSON-RPC is similar to XML-RPC. Data types[edit] Common datatypes are converted into their XML equivalents with example values shown below: NameTag ExampleDescriptionarray   <array>   <data>     <value><i4>1404</i4></value>     <value><string>Something here</string></value>     <value><i4>1</i4></value>   </data> </array>  Array of values, storing no keysbase64   <base64>eW91IGNhbid0IHJlYWQgdGhpcyE=</base64>  Base64-encoded binary databoolean   <boolean>1</boolean>  Boolean logical value (0 or 1)date/time   <dateTime.iso8601>19980717T14:08:55</dateTime.iso8601>  Date and time in ISO 8601 formatdouble   <double>-12.53</double>  Double precision floating point numberinteger   <int>42</int>  or   <i4>42</i4>  Whole number, integerstring   <string>Hello world!</string>  or   Hello world!  String of characters. Must follow XML encoding.struct   <struct>   <member>     <name>foo</name>     <value><i4>1</i4></value>   </member>   <member>     <name>bar</name>     <value><i4>2</i4></value>   </member> </struct>  Associative arraynil   <nil/>  Discriminated null value; an XML-RPC extension Examples[edit] An example of a typical XML-RPC request would be:   <?xml version="1.0"?> <methodCall>   <methodName>examples.getStateName</methodName>   <params>     <param>         <value><i4>40</i4></value>     </param>   </params> </methodCall>  An example of a typical XML-RPC response would be:   <?xml version="1.0"?> <methodResponse>   <params>     <param>         <value><string>South Dakota</string></value>     </param>   </params> </methodResponse>  A typical XML-RPC fault would be:   <?xml version="1.0"?> <methodResponse>   <fault>     <value>       <struct>         <member>           <name>faultCode</name>           <value><int>4</int></value>         </member>         <member>           <name>faultString</name>           <value><string>Too many parameters.</string></value>         </member>       </struct>     </value>   </fault> </methodResponse>  Criticism[edit] Critics of XML-RPC argue that RPC calls can be made with plain XML, and that XML-RPC does not add any value over XML. Both XML-RPC and XML require an application-level data model, such as which field names are defined in the XML schema or the parameter names in XML-RPC. Furthermore, XML-RPC uses about 4 times the number of bytes compared to plain XML to encode the same objects, which is itself verbose compared to JSON.[4][5][6] Implementations[edit] Ruby[edit] XML-RPC Client in stdlibXML-RPC Server in stdlib Python[edit] xmlrpclib Renamed xmlrpc.client in Python 3. Creating XML-RPC Servers and Clients with Twisted C++[edit] LibiqxmlrpcUltra lightweight XML-RPC library for C++XML-RPC for C and C++XmlRpc++XmlRpc C++ client for WindowsgSOAP toolkit for C and C++ supporting XML-RPC and morelibmaia: XML-RPC for Qt/C++XML-RPC Client S60: XML-RPC for Symbian/C++Cxxtools XML-RPC C++ Client and Server for POSIX. It's part of Tntnet project.AnyRPC Supports multiple RPC protocols including XML-RPC Objective-C / GNUstep / Cocoa[edit] XMLRPC Framework Erlang[edit] XML-RPC for Erlang: This is an HTTP 1.1 compliant XML-RPC library for Erlang. It is designed to make it easy to write XML-RPC Erlang clients and/or servers. The library is compliant with the XML-RPC specification published by http://www.xmlrpc.org/ Groovy[edit] XML-RPC Module Java[edit] Apache XML-RPC: Open source library for JavaXML-RPC Delight: Convenient serialisation/deserialisation for Apache XML-RPC using Java Annotations and Beans[1]: Secure Apache XML-RPCRedstone XML-RPC Library: Redstone's Open Source Library – XML-RPC implementation in JavaXML-RPC Library for Java ME: Open source client-side library for Java MEaXMLRPC: Open source XML-RPC client library for Java and AndroidNmote-xr: Open source BSD style client/server library with minimal dependencies JavaScript[edit] XML-RPC for Node.js: Open source JavaScript XML-RPC client and server for node.jsMimic XML-RPC: Open source JavaScript XML-RPC client cross-browser.XML-RPC for Javascript: Open source library implementing the XML-RPC and JSON-RPC protocols, written in Javascript.XML-RPC for Google Polymer: A Google polymer component that deals with XML-RPC resources. XMPP[edit] pyJabberXMLRPC: Python classes for XMPPJabber-RPC: Over the Extensible Messaging and Presence Protocol protocol PHP[edit] XmlRpc in Zend_Framework 1.12: XmlRpc Server and Client in Zend_Framework 1.12XmlRpc in Zend_Framework 2.2: XmlRpc Server and Client in Zend_Framework 2XML-RPC for PHP: a library implementing the XML-RPC protocol, written in PHP Perl[edit] RPC::XML: A set of Perl classes for core data, message and XML handlingFrontier::RPC: Another set of Perl modules for XML-RPC client/server implementationXML::Compile::RPC: RPC extension to XML::Compile Other[edit] JSON/XML-RPC Client and Server: Abstract away the differences between JSON-RPC and XML-RPCRemObjects SDK Delphi and .NET package for XML-RPC, in addition to SOAP and othersRealThinClient SDK: For Delphi/C++XML-RPC for ActionScript: For Flash ActionScript 2.0as3-rpclib: For Flex/Actionscript 3XML-RPC.NET: Open source library for .NET clients and serversXmlRpc-Light: Client and server library for OCamlS-XML-RPC: Client and server library for Common Lispclj-xmlrpc: XML-RPC client for Clojurenecessary-evil: XML-RPC Client and Ring-based Server for ClojureHaXR: Client and server library for HaskellRuby XML-RPC library: For RubyXML-RPC interface to Lua: For Luaandroid-xmlrpc: A light XML-RPC client for Google AndroidXML-RPC for Tcl: A Tcl implementation of XML-RPC providing client and server supportRebXR: a full client/server XML-RPC implementation for REBOL See also[edit] Ajax (programming)Component technologiesOPMLWeb service References[edit]  ^ Simon St. Laurent, Joe Johnston, Edd Dumbill. (June 2001) Programming Web Services with XML-RPC. O'Reilly. First Edition.^ Box, Don (1 April 2001). "A Brief History of SOAP". O'Reilly. Retrieved 27 October 2010. ^ Merrick et al. (11 April 2006). "US Patent 7,028,312". Retrieved 18 September 2008.  CS1 maint: Explicit use of et al. (link)^ "What is the benefit of XML-RPC over plain XML?". Stack Overflow. 9 September 2009. Retrieved 7 April 2011. ^ "An open poll on the merits of XmlRpc versus alternatives". intertwingly.net. 22 November 2006. Retrieved 7 April 2011. ^ Jon Canady (14 January 2010). "If you have REST, why XML-RPC?". joncanady.com. Retrieved 7 April 2011.   External links[edit] XML-RPC HomepageForumTutorialsTechnology ReportsCitations from CiteSeerRelax-NG schema for XML-RPC                    Retrieved from "https://en.wikipedia.org/w/index.php?title=XML-RPC&oldid=678466145"          Categories: XML-based standardsWeb servicesInternet protocolsRemote procedure callHidden categories: CS1 maint: Explicit use of et al.Use dmy dates from October 2012                      Navigation menu                      Personal tools       Create accountLog in                                  Namespaces       ArticleTalk                                      Variants                                                                     Views       ReadEditView history                        More                                                       Search                                                                                     Navigation               Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store                   Interaction               HelpAbout WikipediaCommunity portalRecent changesContact page                   Tools               What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page                   Print/export               Create a bookDownload as PDFPrintable version                   Languages               ????????????????Catal?ÈeštinaDeutschEestiEspa?ol?????Français???Italiano???PolskiPortugu?s???????????????????     Edit links                          This page was last modified on 29 August 2015, at 15:41.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.        Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersMobile view