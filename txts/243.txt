HTML5 video                    From Wikipedia, the free encyclopedia                            Jump to:     navigation,      search           HTML   HTMLDynamic HTML    HTML5 (audiocanvasvideo)    XHTML (BasicMobile ProfileC-HTML)  HTML element (span and div)  HTML attributeHTML frameHTML editor  Character encodings (Unicode)Language codeDocument Object ModelBrowser Object ModelStyle sheets (Cascading (CSS))  Font familyWeb colors  HTML scripting  JavaScript (WebGLWebCL)  W3C (Validator)  WHATWGQuirks modeWeb storage  Web browser (layout) engine Comparisons  Document markup languagesWeb browsers Layout engine support   HTMLNon-standard HTML    HTML5 (canvasmedia)  XHTML (1.1)    vte    The HTML5 specification introduced the video element for the purpose of playing videos,[1] partially replacing the object element. HTML5 video is intended by its creators to become the new standard way to show video on the web without plugins, instead of the previous de facto standard of using the proprietary Adobe Flash plugin, but has been hampered by lack of agreement as to which video coding formats should be supported in web browsers.    Contents  1 History of <video> element2 <video> element examples 2.1 Multiple sources 3 Supported video formats 3.1 Free formats 3.1.1 MPEG-DASH Support via the HTML5 Media Source Extensions (MSE)3.1.2 Google's purchase of On2 3.2 Non-free formats 3.2.1 Cisco makes a licensed H.264 binary module available for free  4 Browser support5 Digital rights management (Encrypted Media Extensions)6 Usage7 See also8 References9 External links   History of <video> element[edit] The <video> element was proposed by Opera Software in February 2007.[2] Opera also released a preview build that was showcased the same day,[3][4] and a manifesto that called for video to become a first-class citizen of the web.[5] <video> element examples[edit] The following HTML5 code fragment will embed a WebM video into a web page.   <video src="movie.webm" poster="movie.jpg" controls>  This is fallback content to display for user agents that do not support the video tag. </video>  The "controls" attribute enables the browser's own user interface for controlling playback. Alternatively, playback can be controlled with JavaScript, which the web designer can use to create a custom user interface. The optional "poster" attribute specifies an image to show in the video's place before playback is started. Its purpose is to be representative of the video. Multiple sources[edit] Video format support varies among browsers (see below), so a web page can provide video in multiple formats. For other features, browser sniffing is used sometimes, which may be error-prone: any web developer's knowledge of browsers will inevitably be incomplete or not up-to-date. The browser in question "knows best" what formats it can use. The "video" element supports fallback through specification of multiple sources. Using any number of <source> elements, as shown below, the browser will choose automatically which file to download. Alternatively, the JavaScript canPlayType() function can be used to achieve the same. The "type" attribute specifies the MIME type and possibly a list of codecs, which helps the browser to determine whether it can decode the file. Even with only one choice, such hints may be necessary to a browser for querying its multimedia framework for third party codecs.   <video poster="movie.jpg" controls>  <source src="movie.webm" type='video/webm; codecs="vp8.0, vorbis"'>  <source src="movie.ogv" type='video/ogg; codecs="theora, vorbis"'>  <source src="movie.mp4" type='video/mp4; codecs="avc1.4D401E, mp4a.40.2"'>  <p>This is fallback content to display for user agents that do not support the video tag.</p> </video>  Supported video formats[edit] See also: Use of Ogg formats in HTML5 The HTML5 specification does not specify which video formats browsers should support. User agents are free to support any video formats they feel are appropriate, but content authors cannot assume that any video will be accessible by all complying user agents, since user agents have no minimal set of video formats to support. The HTML5 Working Group considered it desirable to specify at least one video format which all user agents (browsers) should support. The ideal format in this regard would: Have good compression, good image quality, and low decode processor use.Be royalty-free.In addition to software decoders, a hardware video decoder should exist for the format, as many embedded processors do not have the performance to decode video. Initially, Ogg Theora was the recommended standard video format in HTML5, because it was not affected by any known patents. But on December 10, 2007, the HTML5 specification was updated,[6] replacing the reference to concrete formats:  User agents should support Theora video and Vorbis audio, as well as the Ogg container format.  with a placeholder:[7]  It would be helpful for interoperability if all browsers could support the same codecs. However, there are no known codecs that satisfy all the current players: we need a codec that is known to not require per-unit or per-distributor licensing, that is compatible with the open source development model, that is of sufficient quality as to be usable, and that is not an additional submarine patent risk for large companies. This is an ongoing issue and this section will be updated once more information is available.[8]  The result has been the polarisation of HTML5 video between industry-standard, ISO-defined but patented formats, and free, open formats. Free formats[edit] See also: Theora and WebM Although Theora is not affected by known non-free patents, Apple[9] has expressed concern about unknown patents that might affect it, whose owners might be waiting for a corporation with extensive financial resources to use the format before suing.[10][11] Formats like H.264 might also be subject to unknown patents in principle, but they have been deployed much more widely and so it is presumed that any patent-holders would have already made themselves known. Apple has also opposed requiring Ogg format support in the HTML standard (even as a "should" requirement) on the grounds that some devices might support other formats much more easily, and that HTML has historically not required particular formats for anything.[11] Some web developers criticized the removal of the Ogg formats from the specification.[12] A follow-up discussion also occurred on the W3C questions and answers blog.[13] Mozilla and Opera support only the open formats of Theora and WebM. Google stated its intention to remove support for H.264 in 2011, specifically for the HTML5 video tag.[14] Although it has been removed from Chromium, it has yet to be removed from Google Chrome over a year later.[15][dated info] MPEG-DASH Support via the HTML5 Media Source Extensions (MSE)[edit] See also: Dynamic Adaptive Streaming over HTTP The adaptive bitrate streaming standard MPEG-DASH can be used in Web browsers via the HTML5 Media Source Extensions (MSE)[16] and JavaScript-based DASH players. Such players are, e.g., the open-source project dash.js[16] of the DASH Industry Forum, but there are also products such as bitdash of bitmovin[17] (using HTML5 with JavaScript, but also a Flash-based DASH players for legacy Web browsers not supporting the HTML5 MSE). Google's purchase of On2[edit] Google's acquisition of On2 in 2010 resulted in its acquisition of the VP8 video format. Google has provided a royalty-free license to use VP8.[18] Google also started WebM, which combines the standardized open source VP8 video codec with Vorbis audio in a Matroska based container. The opening of VP8 was welcomed by the Free Software Foundation.[19] When Google announced in January 2011 that it would end native support of H.264 in Chrome,[20] criticism came from many quarters including Peter Bright of Ars Technica[21] and Microsoft web evangelist Tim Sneath, who compared Google's move to declaring Esperanto the official language of the United States.[22] However, Haavard Moen of Opera Software strongly criticized the Ars Technica article[23] and Google responded to the reaction by clarifying its intent to promote WebM in its products on the basis of openness.[14] After the launch of WebM, Mozilla and Opera have called for the inclusion of VP8 in HTML.[24] On March 7, 2013, Google Inc. and MPEG LA, LLC announced agreements covering techniques that "may be essential" to VP8, with Google receiving a license from MPEG LA and 11 patent holders, and MPEG LA ending its efforts to form a VP8 patent pool.[25][26][27][28] Non-free formats[edit] See also: H.264/MPEG-4 AVC H.264/MPEG-4 AVC is widely used, and has good speed, compression, hardware decoders, and video quality, but is patent-encumbered.[29] Users of H.264 need licenses either from the individual patent holders, or from the MPEG LA, a group of patent holders including Microsoft and Apple, except for some Internet broadcast video uses.[30] H.264 is usually used in the MP4 container format, together with Advanced Audio Coding (AAC) audio. AAC is also patented in itself, so users of MP4 will have to license both H.264 and AAC. In June 2009, the WHATWG concluded that no existing format was suitable as a specified requirement.[31] Apple and Microsoft support only H.264. Cisco makes a licensed H.264 binary module available for free[edit] Main article: OpenH264 On October 30, 2013, Cisco announced that they were making a binary H.264 module available for download. Cisco will pay the costs of patent licensing for those binary modules when downloaded by the using software while it is being installed, making H.264 free to use in that specific case.[32] In the announcement, Cisco cited its desire of furthering the use of the WebRTC project as the reason, since WebRTC's video chat feature will benefit from having a video format supported in all browsers.[33] The H.264 module will be available on "all popular or feasibly supportable platforms, which can be loaded into any application".[34] Cisco is also planning to publish source code for those modules under BSD license, but without paying the royalties,[32] so the code will practically be free software only in countries without H.264 software patents, which has already been true about other existing implementations. Also on October 30, 2013, Mozilla's Brendan Eich announced that Firefox would automatically download Cisco's H.264 module when needed by default. He also noted that the binary module is not a perfect solution, since users do not have full free software rights to "modify, recompile, and redistribute without license agreements or fees". Thus Xiph and Mozilla continue the development of Daala.[34][35] OpenH264 only supports the baseline profile of H.264, and does not by itself address the need for an AAC decoder. Therefore, it is not considered sufficient for typical MP4 web video, which is typically in the high profile with AAC audio.[36][37][38] However, for use in WebRTC, the omission of AAC was justified in the release announcement: "the standards bodies have aligned on Opus and G.711 as the common audio codecs for WebRTC".[33] There is doubt as to whether a capped global licensing of AAC, like Cisco's for H.264, is feasible after AAC's licensing bureau removed the price cap shortly after the release of OpenH264.[39] Browser support[edit] Main article: Comparison of layout engines (HTML5 Media) This table shows which video formats are likely to be supported by a given user agent. Most of the browsers listed here use a multimedia framework for decoding and display of video, instead of incorporating such software components. It is not generally possible to tell the set of formats supported by a multimedia framework without querying it, because that depends on the operating system and third party codecs.[40] In these cases, video format support is an attribute of the framework, not the browser (or its layout engine), assuming the browser properly queries its multimedia framework before rejecting unknown video formats. In some cases, the support listed here is not a function of either codecs available within the operating system's underlying media framework, or of codec capabilities built into the browser, but rather could be by a browser add-on that might, for example, bypass the browser's normal HTML parsing of the <video> tag to embed a plug-in based video player. The video format can be specified by MIME type in HTML (see example). MIME types are used for querying multimedia frameworks for supported formats.[41] Of these browsers, only Firefox and Opera employ libraries for built-in decoding. In practice, Internet Explorer and Safari can also guarantee certain format support, because their manufacturers also make their multimedia frameworks. At the other end of the scale, Konqueror has identical format support to Internet Explorer when run on Windows, and Safari when run on Mac, but the selected support here for Konqueror is the typical for GNU/Linux, where Konqueror has most of its users. In general, the format support of browsers is much dictated by conflicting interests of vendors, specifically that Media Foundation and QuickTime support commercial standards, whereas GStreamer and Phonon cannot legally support other than free formats by default on the free operating systems that they are intended for.[42] BrowserOperating systemLatest stable releaseVideo formats supportedTheoraH.264 (MP4)VP8 (WebM)VP9 (WebM)Android browserAndroid4.4.4 "KitKat" (June 19, 2014; 14 months ago (2014-06-19)) [±][43]2.3[44]3.0[44]2.3[44]NoChromiumUnix-like and WindowsN/Ar18297[45]Manual install[note 1][47]r47759[48]r172738[49]Google Chrome Windows, OS X, Linux 44.0.2403.157 (August 20, 2015; 9 days ago (2015-08-20)[50]) [±] 3.0[51][52]3.0[52][note 2]6.0[54][55]29.0[note 3]Internet ExplorerWindows11.0.22 (v11.0.9600.17937) (11 August 2015; 18 days ago (2015-08-11)[58]) [±]Manual install9.0[59]Manual installNoWindows Phone11.0 (February 10, 2014; 18 months ago (2014-02-10)) [±]No9.0[60]NoWindows RT10.010.0[60]Microsoft EdgeWindows 10Windows 10 20.10240.16384.0 (July 29, 2015; 31 days ago (2015-07-29)[61]) [±]No1.0[62]NoNoKonquerorAll supported4.14.3 (November 11, 2014; 9 months ago (2014-11-11)) [±][63]4.4[note 4]Mozilla FirefoxWindows 7+40.0.3 (August 27, 2015; 2 days ago (2015-08-27)[65]) [±] ESR 38.2.1 (August 27, 2015; 2 days ago (2015-08-27)[66]) [±] 3.5[67]21.0[note 5]4.0[70][71]28.0[72][73]Windows Vista22.0[74]Windows XPmanual install[75][note 6]Linux26.0 (using GStreamer)[note 7]Android17.0[79]OS X34.0[80]Firefox OS1.1[81]Opera Android 30.0.1856.93524 (June 24, 2015; 2 months ago (2015-06-24)[82]) [±] Android (classic) 12.1.8 (November 6, 2014; 9 months ago (2014-11-06)[83]) [±] Symbian S60 12.0.22 (June 24, 2012; 3 years ago (2012-06-24)[84]) [±] Windows Mobile 10.0 (March 16, 2010; 5 years ago (2010-03-16)[85]) [±] No11.5015.016.031.0.1889.174 (August 18, 2015; 11 days ago (2015-08-18)[86]) [±]10.50[87]24.0[88]10.60[89][90]NoSafariiOS for OS X Yosemite 8.0.8 (August 13, 2015; 16 days ago (2015-08-13)[91]) [±] for OS X Mavericks 7.1.8 (August 13, 2015; 16 days ago (2015-08-13)[91]) [±] for OS X Mountain Lion 6.2.8 (August 13, 2015; 16 days ago (2015-08-13)[91]) [±] No3.1[92][93]NoNoOS XManual installManual install[94]Web (previously Epiphany)All supported3.16.3 (May 18, 2015; 3 months ago (2015-05-18)) [±][95]2.28[note 8] Notes   ^ Third-party codec packages are available.[46]^ On 11 January 2011 the removal of support for H.264 was announced on Chromium Blog.[53] As of 8 September 2012[update] neither actual support was removed, nor the change to this plan was announced.^ VP9 support in 25, turned off by default.[56] Enabled by default in version 29.[57]^ Any format supported by Phonon on Qt 4.5.[64] Any format supported by Phonon backend. Available Phonon backends include DirectShow, QuickTime, GStreamer and xine; backends using MPlayer and VLC are in development.^ As of version 20, prefed off by default.[68] Enabled by default beginning in version 21.[69]^ DivX supports HTML5 integration only in Web Player version 2.x.[76]^ Disabled by default until version 26.[77] Also, depends on the codec on the system.[78]^ Any format supported by GStreamer on Webkit/GTK+.[96] The support for Ogg Theora, WebM and h.264 formats is included with base, good, and bad plugins respectively.[97] Digital rights management (Encrypted Media Extensions)[edit] Main article: Encrypted Media Extensions HTML has support for digital rights management (DRM, restricting how content can be used) via the HTML5 Encrypted Media Extensions (EME). The addition of DRM is controversial because it allows restricting users' freedom to use media restricted by DRM, even where fair use gives users the legal right to do so.[98] A main argument in W3C's approval of EME was that the video content would otherwise be delivered in plugins and apps, and not in the web browser.[99] In 2013 Netflix added support for HTML5 video using EME, beside their old delivery method using a Silverlight plugin (also with DRM).[100] Usage[edit] As of April 2010[update], in the wake of Apple iPad launch, a number of high-profile sites have started to serve H.264 HTML5 video instead of Flash for user-agents identifying as iPad.[101] As of May 2010[update], HTML5 video is not currently as widespread as Flash videos, though recent rollouts of experimental HTML5-based video players from DailyMotion (using Ogg Theora and Vorbis format),[102] YouTube (using the H.264 and WebM formats),[103] and Vimeo (using the H.264 format)[104] suggest that interest in adopting HTML5 video is increasing. Some major video-providing websites have announced decisions to continue using technologies other than HTML5 video.[105][106][107] According to a YouTube blog post from June 2010, the <video> tag "does not currently meet all the needs of a website like YouTube".[108] The main reasons stated include the lack of a standard format, the absence of an effective and reliable means of delivering the video to the browser, JavaScript unable to display video fullscreen, and content protection issues. Hulu also has not adopted HTML5 video due to the inability of providing the user with adaptive bandwidth videos, securing the producer's content, and providing advertisers with data.[109] Netflix stated that there are a number of issues preventing them from using HTML5 video: acceptable A/V container formats; acceptable audio and video codecs; streaming protocol; a way for the streaming protocol to adapt to available bandwidth; a way of conveying information about available streams and other parameters to the streaming player module; a way of supporting protected content; and a way of exposing all this functionality into HTML5.[106][110] On January 11, 2011, Google's Chromium Project announced on their blog that support for closed codecs (particularly H.264) would be removed from future releases of Chrome. The Chromium announcement specifically mentioned that this removal was an effort to increase the use of license-free HTML5 and the <video> tag, driving web-wide adoption of the open-source codecs VP8 and Theora. On February 2, 2011 Microsoft released the Windows Media Player HTML5 Extension for Chrome for Windows 7 which added the ability to use the licensed H.264 player included with Windows 7 to play back H.264 media content using Chrome.[111] See also[edit] HTML5 audioComparison of layout engines (HTML5 Media)Comparison of HTML5 and Flash References[edit]  ^ "The video element". HTML5: A vocabulary and associated APIs for HTML and XHTML. World Wide Web Consortium. 24 June 2010. Retrieved 2010-09-27. A video element is used for playing videos or movies. ^ van Kesteren, Anne (28 February 2007). "[whatwg] <video> element proposal". What Working Group (Mailing list). Retrieved 2010-04-10. ^ "Browser War: Episode II  Attack of the DOMs". Retrieved 10 April 2012. ^ "SV Web Builders Event  World Premier of Opera with builtin video support". Retrieved 10 April 2012. ^ "A Call for Video on the Web". Retrieved 10 April 2012. ^ Hickson, Ian (10 December 2007). "Video codec requirements changed". What WG (Mailing list). Retrieved 2008-02-25. ^ "(X)HTML5 Tracking". HTML5. Retrieved 2009-06-23. ^ Amador, Manuel (2011-12-11). "Removal of Ogg is *preposterous*". WHATWG (Mailing list). Retrieved 2009-08-25. ^ "Steve Jobs: mystery patent pool to attack Ogg Theora". The Register. Retrieved 9 July 2011. ^ Hickson, Ian (2007-12-11). "Re: Removal of Ogg is *preposterous*". WHATWG (Mailing list). Retrieved 2008-02-25. ^ a b Stachowiak, Maciej (2007-03-21). "Codecs (was Re: Apple Proposal for Timed Media Elements)". WHATWG (Mailing list). ^ "[whatwg] Removal of Ogg is *preposterous*". WHATWG (Mailing list). 2007-12-11. Retrieved 2009-08-25. ^ Connolly, Dan (December 18, 2007). "When will HTML 5 support <video>? Sooner if you help". W3C. Retrieved 2009-06-23. ^ a b Jazayeri, Michael 'Mike' (2011-01-14). "More about the Chrome HTML Video Codec Change". Chromium blog. ^ Shankland, Stephen (2012-03-14). "Mozilla execs capitulate in H.264 Web-video war". CNET. ^ a b HTML5 MSE^ bitdash MPEG-DASH Player (HTML5 & Flash) www.dash-player.com^ Google. "Additional IP Rights Grant (Patents)". Google. ^ Lee, Matt (May 19, 2010). "Free Software Foundation statement on WebM and VP8". FSF. ^ Jazayeri, Michael 'Mike'. "HTML Video Codec Support in Chrome". The Chromium Blog. ^ Bright, Peter (2011-01-12). "Google's dropping H.264 from Chrome a step backward for openness". Ars Technica. ^ Sneath, Tim (2011-01-11). "An Open Letter from the President of the United States of Google". MSDN blogs. ^ Moen, Haavard K (2011-01-13). "Is the removal of H.264 from Chrome a step backward for openness?". My Opera. ^ Metz, Cade (2010-05-28). "Mozilla and Opera call for Google open codec in HTML5 spec". The Register. ^ djwm (2013-03-07). "Google and MPEG LA make a deal over VP8 codec - Update". The H Open. Heise Media UK. Retrieved 2013-04-03. ^ http://www.mpegla.com/Lists/MPEG%20LA%20News%20List/Attachments/88/n-13-03-07.pdf^ "VP8 and MPEG LA". WebM Project blog. 2013-03-07. Retrieved 2013-04-03. ^ http://www.fosspatents.com/2013/03/patent-clouds-remain-over-vp8-google.html^ "AVC/H.264 Patent List" (PDF). MPEG LA. 2010-02-01. ^ AVC/H.264 Licensors, MPEG LA ^ Hickson, Ian (2009-06-29). "Codecs for <audio> and <video>". WHATWG (Mailing list). ^ a b http://www.openh264.org/faq.html^ a b "Open-Sourced H.264 Removes Barriers to WebRTC". Cisco. 2013-10-30. Retrieved 2013-10-30. ^ a b Brendan Eich (2013-10-30). "Ciscos H.264 Good News". Brendan Eich's blog. ^ Monty Montgomery. "Comments on Cisco, Mozilla, and H.264". Monty Montgomery blog. ^ Gal, Andreas (2014-10-14). "OpenH264 now in Firefox". Retrieved 2015-02-25. ^ "MediaSourceExtensions (mozilla wiki)". mozilla. Retrieved 2015-02-25. ^ "Support H.264/AAC/MP3 video/audio playback on desktop Firefox". mozilla. Retrieved 2015-02-25. ^ http://xiphmont.livejournal.com/63152.html^ "Phonon documentation of backends", Qt, Nokia, retrieved 2011-06-03 ^ "Phonon documentation of querying", Qt, Nokia, retrieved 2011-06-03 ^ "GNU GPL - GNU General Public License Version 3 Free Software Foundation", 29 June 2007 https://www.gnu.org/licenses/gpl.html, retrieved 2013-04-27  Missing or empty |title= (help)^ "Google Rolling Out Android 4.4.4 Update (KTU84P) With A Security Fix, Factory Images/Binaries Up For Nexus Devices". 2014-06-19. Retrieved 2014-08-03. ^ a b c Kyrnin, Jennifer, Understanding HTML5 Video Formats, About, retrieved 2012-01-01 ^ Issue 4363: [HTML5-Video] Enable HTML5 video/audio elements, Google, retrieved 2010-09-10 ^ "Get Chromium on Ubuntu To Play MP4, H.264, MP3 & view PDF files natively", OMG Ubuntu, 2010-11-21, retrieved 2011-11-12 ^ http://superuser.com/questions/655605/how-do-i-add-mp3-mp4-and-h-264-support-to-chromium-on-windows^ "Issue 2093007: Chromium side changes for enabling VP8 and WebM support", Code review, Google, retrieved 2010-09-10 ^ http://src.chromium.org/viewvc/chrome?view=rev&revision=172738^ "Stable Channel Update". Chrome Releases. Blogger. August 20, 2015. Retrieved August 20, 2015. ^ "Google Chrome support Theora and Vorbis", Code, Google, 2010-05-20 ^ a b Google Chrome 3.0 will support <video> tag, FR: C net ^ Mike, Jazayeri (11 January 2011). "Chromium Blog: HTML Video Code Support in Chrome". The Chromium Blog. Retrieved 22 April 2012. ^ Bankoski, Jim (2010-05-19), "WebM and VP8 land in Chromium", Chromium (World Wide Web log), Google ^ Kersey, Jason (2010-06-03), "Dev Channel Update", Chrome Releases, Google, retrieved 2010-07-01 ^ Chrome Adds Support for the Next-Generation VP9 Video Codec and Mozilla's Opus Audio ^ Chrome Now Supports Google's Next-Gen VP9 Video Codec by Default ^ "Microsoft Security Bulletin MS15-065 - Cumulative Security Update for Internet Explorer (3082442)". Security TechCenter. Microsoft. 11 August 2015. Retrieved 12 August 2015. ^ McCracken, Harry (2010-03-16), Microsoft Previews the Revamped Internet Explorer 9 Platform, Technologizer ^ a b HTML5 Video Support in IE9 Mobile, Microsoft, 2011-10-13, retrieved 2014-03-11 ^ "Build 10240 now available for Windows Insiders in Fast and Slow rings". Microsoft. Retrieved 22 August 2015. ^ http://html5test.com/compare/browser/ie-Edge.html^ "KDE Ships Applications and Platform 4.14.3". KDE. 11 November 2014. Retrieved 29 July 2015. ^ Vestb?, Tor Arne (2008-05-13), Top Secret, Hush Hush!, Nokia, retrieved 2010-03-14 ^ "Firefox  Notes (40.0.3)  Mozilla". mozilla.org. 2015-08-27. Retrieved 2015-08-27. ^ "Firefox  Notes (38.2.1)  Mozilla". mozilla.org. 2015-08-27. Retrieved 2015-08-28. ^ Firefox 3.5 (release notes), Mozilla, 2009-06-30, retrieved 2010-02-15 ^ Bug 799315  Windows Media Foundation backend for media playback, Mozilla, retrieved 2012-12-21 ^ Bug 837859  Enable WMF backend, Mozilla, retrieved 2013-04-05 ^ Bug 566243  Merge mozilla-webmedia repository to mozilla-central, Mozilla ^ Firefox Nightly Builds, Mozilla ^ [Phoronix] Mozilla Firefox Enables VP9 Video Codec By Default, Phoronix, retrieved 2013-12-08 ^ http://www.mozilla.org/en-US/firefox/28.0/releasenotes/^ Bug 825153 - Add support for Windows Vista WMF and prepend the system32 directory path to dll names, Mozilla, retrieved 2013-03-28 ^ http://blog.divx.com/2010/12/16/hey-microsoft-divx-already-supports-h-264-with-html5-in-firefox/^ https://forums.divx.com/divx/topics/html5_integration_broken^ Bug 886181 - Pref on gstreamer backend, Mozilla, retrieved 2013-09-21 ^ Bug 794282 - Enable GStreamer in official builds, Mozilla, retrieved 2013-06-23 ^ http://arstechnica.com/information-technology/2012/11/mozilla-ships-firefox-with-h-264-support-on-android/^ Bug 1070703 - Add mp4 support in 10.6 and 10.7 on Aurora, Mozilla, retrieved 2014-10-02 ^ https://developer.mozilla.org/en-US/Apps/Build/Audio_and_video_delivery/H.264_support_in_Firefox^ "Opera browser for Android". 2015-06-24. Retrieved 2015-07-30. ^ "Opera Mobile Classic". 2014-11-16. Retrieved 2015-01-20. ^ "Opera Mobile 12.0.2 for S60". 2012-06-24. Archived from the original on 2014-02-25. Retrieved 2014-10-16. ^ "No mobile phone left behind: Opera Mini 5 and Opera Mobile 10 introduced in final, consumer-ready versions". 2010-03-16. Retrieved 2014-10-16. ^ "Opera 31.0.1889.174 Stable update". 2015-08-18. Retrieved 2015-08-18. ^ Jägenstedt, Philip (2009-12-31), "(re-)Introducing <video>" (official blog), Core developers (Opera), retrieved 2010-02-06 ^ http://blogs.opera.com/desktop/changelog-24/^ Lie, H?kon Wium (2010-05-19), Welcome, WebM <video>!, Opera ^ Mills, Chris (2010-05-19), Opera supports the WebM video format, Opera ^ a b c "About the security content of Safari 8.0.8, Safari 7.1.8, and Safari 6.2.8". Apple Inc. August 13, 2015. Retrieved August 15, 2015. ^ "HTML5 video formats", Web design, About .^ "Media formats supported by the HTML audio and video elements", Developer, Mozilla .^ "WebM plugin available", Code, Google, retrieved 2011-06-23 ^ Hergert, Christian. "GNOME Builder - 3.16.3". Retrieved 29 July 2015. ^ Persch, Christian (April 1, 2008), "The Future of Epiphany" (announcement), epiphany mailing list-list ^ "Overview of available plug-ins", GStreamer, retrieved 2012-07-04 ^ http://www.defectivebydesign.org/sign-on-against-drm-in-html^ http://www.infoworld.com/article/2612478/html5/berners-lee-and-w3c-approve-html5-video-drm-additions.html?page=2^ http://techblog.netflix.com/2013/04/html5-video-at-netflix.html^ "iPad-ready websites". Apple. Retrieved 2010-04-05. ^ "Watch Videowithout Flash". Dailymotion. 2009-05-27. Retrieved 2010-05-18. ^ Carle, Kevin; Zacharias, Chris (2010-01-20). "Introducing YouTube HTML5 Supported Videos". Youtube. Google. Retrieved 2010-03-07. ^ Dougherty, Brad (2010-01-21). "Try our new HTML5 player!". Vimeo. Retrieved 2010-03-07. ^ Herrman, Johan (2010-02-03). "Giz Explains: Why HTML5 Isn't Going to Save the Internet". Gizmodo. Retrieved 2012-07-25. ^ a b "Netflix has no plans to use HTML5", Gigaom .^ "Why HTML5 won't replace Flash", Pseudocoder .^ "Flash and the HTML5 <video> tag". You tube. Google. ^ "Pardon Our Dust <video> tag". Hulu. 2010-05-13. ^ "PCMag", PC Magazine  |chapter= ignored (help).^ Caldato, Claudio (2011-02-02). "Greater Interoperability for Windows Customers With HTML5 Video" (blog). MSDN. Microsoft. Retrieved 2012-07-25.   External links[edit] "HTML5  The Video Element", What WG, W3C .Daoust, Francois; Hoschka, Philipp; Patrikakis, Charalampos Z (2010), Towards Video on the Web with HTML5 (PDF), Barcelona: NEM Summit .Lawson, Bruce; Lauke, Patrick H. (2010-02-11), Introduction to HTML5 video, Opera .HTML5 Video  video platform software and news.Pieters, Simon (2010-03-03), Everything you need to know about HTML5 video and audio, Opera HTML5 Video: A Practical Guide: Convert, Embed, Javascript and Flash Fallback for HTML5 VideosMozilla's overview of media formats supported by browsers    vte  World Wide Web Consortium (W3C) Products and standards  Recommendations  ARIACanonical XMLCDFCSSDOMGeolocation APIHTML (HTML5)ITSMathMLOWLP3PPLSRDFRDF SchemaSISRSKOSSMILSOAPSRGSSSMLSVGSPARQLTimed textVoiceXMLWeb storageWSDLXFormsXHTMLXHTML+RDFaXIncludeXLinkXMLXML BaseXML EncryptionXML EventsXML Information SetXML namespaceXML SchemaXML SignatureXOPXPathXPath 2.0XPointerXProcXQueryXSLXSL-FOXSLT (elements)  Notes  XAdESXHTML+SMILXUP  Working drafts  CCXMLCURIEEMEInkMLJSON-LDMSERIFSCXMLSMIL TimesheetssXBLWICDXFDLXFramesXBLXMLHttpRequest  Guidelines  Web Content Accessibility Guidelines  Initiative  Multimodal Interaction Activity (MMI)Markup Validation ServiceWeb Accessibility InitiativeWebPlatform  Deprecated  C-HTMLHDMLJSSSPGMLVMLXHTML+MathML+SVG   Organizations    World Wide Web Foundation  Working groups  SVGCSSHTMLWebOnt (Semantic Web Activity)Device Description (DDWG)Web Hypertext Application Technology (WHATWG)   Software    CERN httpdLibwww  Browsers  Line Mode (1990)Arena (199398)Agora (199497)Argo (199497)Amaya (browser/editor, 19962012)   Conferences  International World Wide Web Conference (IW3C) Steering Committee (IW3C2)First conference ("WWW1", 1994)        vte  Web interfaces Server-side   Protocols   CGISCGIFCGIAJPWSRPWebSocket   Server APIs   C NSAPIC ASAPIC ISAPICOM ASPJava servlet container Portlet container CIL System.Web.IHttpHandlerPython WSGIRuby RackJavaScript JSGIPerl PSGILua WSAPIOWIN   Apache modules   mod_jkmod_lispmod_monomod_parrotmod_perlmod_phpmod_proxymod_pythonmod_wsgimod_rubyPhusion Passenger   Topics   Web resource vs. Web serviceOpen APIWebhookApplication server comparison    Client-side   Browser APIs   C NPAPI LiveConnectXPConnect C NPRuntimeC PPAPI NaCl ActiveX   Web APIs    W3C   AudioCanvasCORSFileGeolocationIndexedDBMicrodataSSESVGVideoWebRTCWebSocketWeb messagingWeb storageWeb workerXMLHttpRequest   Khronos   WebCLWebGL   Others   GearsWeb SQL Database (formerly W3C)    Topics   MashupWeb IDL                        Retrieved from "https://en.wikipedia.org/w/index.php?title=HTML5_video&oldid=676107213"          Categories: HTML5Hidden categories: Articles containing potentially dated statements from September 2012All articles containing potentially dated statementsPages with citations lacking titlesPages with citations having bare URLsCS1 errors: chapter ignoredWikipedia articles in need of updating from November 2014Articles containing potentially dated statements from April 2010Articles containing potentially dated statements from May 2010                      Navigation menu                      Personal tools       Create accountLog in                                  Namespaces       ArticleTalk                                      Variants                                                                     Views       ReadEditView history                        More                                                       Search                                                                                     Navigation               Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store                   Interaction               HelpAbout WikipediaCommunity portalRecent changesContact page                   Tools               What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page                   Print/export               Create a bookDownload as PDFPrintable version                   Languages               ???????ÈetinaEspa?olEsperantoFrançais???Bahasa IndonesiaItaliano???Polski????????????? / srpski     Edit links                          This page was last modified on 14 August 2015, at 18:52.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.        Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersMobile view