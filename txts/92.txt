Web worker                    From Wikipedia, the free encyclopedia                            Jump to:     navigation,      search          A web worker, as defined by the World Wide Web Consortium (W3C) and the Web Hypertext Application Technology Working Group (WHATWG), is a JavaScript script executed from an HTML page that runs in the background, independently of other user-interface scripts that may also have been executed from the same HTML page.[1] Web workers are able to utilize multi-core CPUs more effectively.[citation needed] The W3C and WHATWG envision web workers as long-running scripts that are not interrupted by user-interface scripts (scripts that respond to clicks or other user interactions). Keeping such workers from being interrupted by user activities should allow Web pages to remain responsive at the same time as they are running long tasks in the background. The simplest use of workers is for performing a computationally expensive task without interrupting the user interface. The W3C and the WHATWG are currently in the process of developing a definition for an API for web workers.[1]    Contents  1 Overview2 Features3 Example4 Support5 See also6 References7 External links   Overview[edit] As envisioned by WHATWG, web workers are relatively heavy-weight. They are expected to be long-lived, have a high start-up performance cost, and a high per-instance memory cost.[1] Web workers are not intended or expected to be used in large numbers as they could hog system resources. Web Workers allow for concurrent execution of the browser threads and one or more JavaScript threads running in the background. The browser which follows a single thread of execution will have to wait on JavaScript programs to finish executing before proceeding and this may take significant time which the programmer may like to hide from the user. It allows for the browser to continue with normal operation while running in the background.The web worker specification[1] is a separate specification from the HTML5 specification[2][3] and can be used with HTML5. There are two types of web workers:[1] dedicated and shared workers. When web workers run in the background, they do not have direct access to the DOM but communicate with the document by message passing. This allows for multi-threaded execution of JavaScript programs. Features[edit] Web workers interact with the main document via message passing. The following code creates a Worker that will execute the JavaScript in the given file.   var worker = new Worker("worker_script.js");  To send a message to the worker, the postMessage method of the worker object is used as shown below.   worker.postMessage("Hello World!");  The onmessage property uses an event handler to retrieve information from a worker.   worker.onmessage = function(event) {  alert("Received message " + event.data);  doSomething(); }   function doSomething() {  //do work  worker.postMessage("Work done!"); }  worker.terminate();  Once a worker is terminated, it goes out of scope and the variable referencing it becomes undefined; at this point a new worker has to be created if needed. Example[edit] The simplest use of web workers is for performing a computationally expensive task without interrupting the user interface. In this example, the main document spawns a web worker to compute prime numbers, and progressively displays the most recently found prime number. The main page is as follows:   <!DOCTYPE html> <html>  <head>   <title>Worker example: One-core computation</title>  </head>  <body>   <p>The highest prime number discovered so far is: <output id="result"></output></p>   <script>    var worker = new Worker('worker.js');    worker.onmessage = function (event) {      document.getElementById('result').textContent = event.data;    };   </script>  </body> </html>  The Worker() constructor call creates a web worker and returns a worker object representing that web worker, which is used to communicate with the web worker. That object's onmessage event handler allows the code to receive messages from the web worker. The Web Worker itself is as follows:   var n = 1; search: while (true) {   n++;   for (var i = 2; i <= Math.sqrt(n); i++)     if (n % i == 0)       continue search;   // found a prime!   postMessage(n); }  To send a message back to the page, the postMessage() method is used to post a message when a prime is found.[1] Support[edit] If the browser supports web workers, a Worker property will be available on the global window object.[4] The Worker property will be undefined if the browser does not support it. The following example code checks for web worker support on a browser   function browserSupportsWebWorkers() {   return typeof window.Worker === "function"; }  Web workers are currently supported by Safari, Chrome, Opera, Internet Explorer (version 10) and Mozilla Firefox.[3][5] Mobile Safari for iOS has supported web workers since iOS 5. The Android browser first supported web workers in Android 2.1, but support was removed in Android versions 2.2–4.3 before being restored in Android 4.4.[6][7] See also[edit] JavaScriptHTMLHTML5 References[edit]  ^ a b c d e f Web Workers, WHATWG, retrieved 2010-06-03 ^ http://dev.w3.org/html5/spec/overview.html^ a b "Introducing HTML5", Lawson, B. and Sharp, R., 2011.^ "HTML5 Up and Running" Mark Pilgrim. O'Reilly/Google Press. August 2010^ "HTML5 and CSS3" Brian P. Hogan. The Pragmatic Programmers, LLC 2010.^ http://www.isogenicengine.com/2010/10/25/spotlight-benchmarking-android-2-1-with-web-workers/^ http://caniuse.com/#search=worker  External links[edit] Specifications Web Workers – W3CWeb Workers – WHATWG Browser Using Web Workers – Mozilla Developer Center    vte  Web interfaces Server-side   Protocols   CGISCGIFCGIAJPWSRPWebSocket   Server APIs   C NSAPIC ASAPIC ISAPICOM ASPJava servlet container Portlet container CIL System.Web.IHttpHandlerPython WSGIRuby RackJavaScript JSGIPerl PSGILua WSAPIOWIN   Apache modules   mod_jkmod_lispmod_monomod_parrotmod_perlmod_phpmod_proxymod_pythonmod_wsgimod_rubyPhusion Passenger   Topics   Web resource vs. Web serviceOpen APIWebhookApplication server comparison    Client-side   Browser APIs   C NPAPI LiveConnectXPConnect C NPRuntimeC PPAPI NaCl ActiveX   Web APIs    W3C   AudioCanvasCORSFileGeolocationIndexedDBMicrodataSSESVGVideoWebRTCWebSocketWeb messagingWeb storageWeb workerXMLHttpRequest   Khronos   WebCLWebGL   Others   GearsWeb SQL Database (formerly W3C)    Topics   MashupWeb IDL        vte  World Wide Web Consortium (W3C) Products and standards  Recommendations  ARIACanonical XMLCDFCSSDOMGeolocation APIHTML (HTML5)ITSMathMLOWLP3PPLSRDFRDF SchemaSISRSKOSSMILSOAPSRGSSSMLSVGSPARQLTimed textVoiceXMLWeb storageWSDLXFormsXHTMLXHTML+RDFaXIncludeXLinkXMLXML BaseXML EncryptionXML EventsXML Information SetXML namespaceXML SchemaXML SignatureXOPXPathXPath 2.0XPointerXProcXQueryXSLXSL-FOXSLT (elements)  Notes  XAdESXHTML+SMILXUP  Working drafts  CCXMLCURIEEMEInkMLJSON-LDMSERIFSCXMLSMIL TimesheetssXBLWICDXFDLXFramesXBLXMLHttpRequest  Guidelines  Web Content Accessibility Guidelines  Initiative  Multimodal Interaction Activity (MMI)Markup Validation ServiceWeb Accessibility InitiativeWebPlatform  Deprecated  C-HTMLHDMLJSSSPGMLVMLXHTML+MathML+SVG   Organizations    World Wide Web Foundation  Working groups  SVGCSSHTMLWebOnt (Semantic Web Activity)Device Description (DDWG)Web Hypertext Application Technology (WHATWG)   Software    CERN httpdLibwww  Browsers  Line Mode (1990–)Arena (1993–98)Agora (1994–97)Argo (1994–97)Amaya (browser/editor, 1996–2012)   Conferences  International World Wide Web Conference (IW3C) Steering Committee (IW3C2)First conference ("WWW1", 1994)                        Retrieved from "https://en.wikipedia.org/w/index.php?title=Web_worker&oldid=666575535"          Categories: Web developmentHidden categories: All articles with unsourced statementsArticles with unsourced statements from January 2013                      Navigation menu                      Personal tools       Create accountLog in                                  Namespaces       ArticleTalk                                      Variants                                                                     Views       ReadEditView history                        More                                                       Search                                                                                     Navigation               Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store                   Interaction               HelpAbout WikipediaCommunity portalRecent changesContact page                   Tools               What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page                   Print/export               Create a bookDownload as PDFPrintable version                   Languages                    Add links                          This page was last modified on 12 June 2015, at 03:37.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.        Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersMobile view