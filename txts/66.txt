Remote procedure call                    From Wikipedia, the free encyclopedia                            Jump to:     navigation,      search            This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (November 2009) In computer science, a remote procedure call (RPC) is an inter-process communication that allows a computer program to cause a subroutine or procedure to execute in another address space (commonly on another computer on a shared network) without the programmer explicitly coding the details for this remote interaction.[1] That is, the programmer writes essentially the same code whether the subroutine is local to the executing program, or remote. When the software in question uses object-oriented principles, RPC is called remote invocation or remote method invocation (RMI). Many different (often incompatible) technologies have been used to implement the concept.    Contents  1 History and origins2 Message passing 2.1 Sequence of events during an RPC2.2 Standard contact mechanisms 3 Other RPC analogues4 Web5 See also6 Notes7 External links   History and origins[edit] The idea of treating network operations as remote procedure calls goes back at least to the 1980s in early ARPANET documents.[2] Bruce Jay Nelson is generally credited with coining the term.[3][4][5] One of the first business uses of RPC was by Xerox under the name "Courier" in 1981. The first popular implementation of RPC on Unix was Sun's RPC (now called ONC RPC), used as the basis for Network File System. Message passing[edit] An RPC is initiated by the client, which sends a request message to a known remote server to execute a specified procedure with supplied parameters. The remote server sends a response to the client, and the application continues its process. While the server is processing the call, the client is blocked (it waits until the server has finished processing before resuming execution), unless the client sends an asynchronous request to the server, such as an XHTTP call. There are many variations and subtleties in various implementations, resulting in a variety of different (incompatible) RPC protocols. An important difference between remote procedure calls and local calls is that remote calls can fail because of unpredictable network problems. Also, callers generally must deal with such failures without knowing whether the remote procedure was actually invoked. Idempotent procedures (those that have no additional effects if called more than once) are easily handled, but enough difficulties remain that code to call remote procedures is often confined to carefully written low-level subsystems. Sequence of events during an RPC[edit] The client calls the client stub. The call is a local procedure call, with parameters pushed on to the stack in the normal way.The client stub packs the parameters into a message and makes a system call to send the message. Packing the parameters is called marshalling.The client's local operating system sends the message from the client machine to the server machine.The local operating system on the server machine passes the incoming packets to the server stub.The server stub unpacks the parameters from the message. Unpacking the parameters is called unmarshalling.Finally, the server stub calls the server procedure. The reply traces the same steps in the reverse direction. Standard contact mechanisms[edit] To let different clients access servers, a number of standardized RPC systems have been created. Most of these use an interface description language (IDL) to let various platforms call the RPC. The IDL files can then be used to generate code to interface between the client and servers. Other RPC analogues[edit]   This section needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (December 2013) The RPC paradigm was invented by Sun Microsystems with their implementation, now known as the Open Network Computing Remote Procedure Call. Other RPC analogues and implementations can now be found elsewhere: D-Bus open source IPC program provides similar function to CORBA.Java's Java Remote Method Invocation (Java RMI) API provides similar functionality to standard Unix RPC methods.SORCER provides the API and exertion-oriented language (EOL) for a federated method invocationModula-3's network objects, which were the basis for Java's RMI[6]XML-RPC is an RPC protocol that uses XML to encode its calls and HTTP as a transport mechanism.JSON-RPC is an RPC protocol that uses JSON-encoded messagesJSON-WSP is an RPC protocol that uses JSON-encoded messagesSOAP is a successor of XML-RPC and also uses XML to encode its HTTP-based calls.RPyC implements RPC mechanisms in Python, with support for asynchronous calls.Spyne defines primitives for doing RPC in Python. It also contains implementations of some of the most popular protocols and transports.[7]Pyro object-oriented form of RPC for Python.ZeroC's Internet Communications Engine (Ice) distributed computing platform.Etch framework for building network services.Apache Thrift protocol and framework.BERT-RPC is an RPC protocol in use by Github [8][9]CORBA provides remote procedure invocation through an intermediate layer called the object request broker.Distributed Ruby (DRb) allows Ruby programs to communicate with each other on the same machine or over a network. DRb uses remote method invocation (RMI) to pass commands and data between processes.Action Message Format (AMF) allows Adobe Flex applications to communicate with back-ends or other applications that support AMF.Libevent provides a framework for creating RPC servers and clients.[10]Windows Communication Foundation is an application programming interface in the .NET framework for building connected, service-oriented applications.Microsoft .NET Remoting offers RPC facilities for distributed systems implemented on the Windows platform. It has been superseded by WCF.The Microsoft DCOM uses MSRPC which is based on DCE/RPCThe Open Software Foundation DCE/RPC Distributed Computing Environment (also implemented by Microsoft).Google Protocol Buffers (protobufs) package includes an interface definition language used for its RPC protocols.[11]Google Web Toolkit uses an asynchronous RPC to communicate to the server service.[12]Apache Avro provides RPC where client and server exchange schemas in the connection handshake and code generation is not required.Spike-Engine provides cross platform RPC facilities for .NET framework, web and mobile architectures with auto-generated stubs.Twitter Finagle is a network stack for the JVM that you can use to build asynchronous Remote Procedure Call (RPC) clients and servers in Java, Scala, or any JVM-hosted language.SAP Remote Function Call (RFC) is the standard SAP interface for communication between SAP systems. RFC calls a function to be executed in a remote system.Elixir (programming language) builds on top of the Erlang VM and allows process communication (Elixir/Erlang processess, not OS processes) of the same network out-of-the-box via Agents and message passing. Web[edit] Further information: Web service § Styles of use See also[edit] JSON-RPC the "JSON encoded" RPC variant.XML-RPC the "XML encoded" RPC variant.9PMicrosoft RPCLocal Procedure CallSOAPHTTPODBCRemote function callRemote evaluationExternal Data RepresentationROA (Resource-oriented architecture)Distributed object middlewareJava remote method invocationElixir (programming language) Notes[edit]  ^ Arpaci-Dusseau, Remzi H.; Arpaci-Dusseau, Andrea C. (2014), Introduction to Distributed Systems (PDF), Arpaci-Dusseau Books ^ Anand M. White (December 23, 1975). "A High-Level Framework for Network-Based Resource Sharing". RFC 707. Augmentation Research Center. Retrieved July 11, 2011. ^ "1994 – Andrew Birrell, Bruce Nelson: Remote Procedure Call". Software System Award citation. Association for Computing Machinery. Retrieved July 11, 2011. ^ "SIGOPS Hall of Fame Award". Special Interest Group on Operating Systems. Association for Computing Machinery. Retrieved July 11, 2011. ^ Bruce Jay Nelson (May 1981). Remote Procedure Call. PARC CSL-81-9 (Also CMU-CS-81-119) (Xerox Palo Alto Research Center).  PhD thesis.^ The A-Z of Programming Languages: Modula-3 - a-z of programming languages. Computerworld. Retrieved on 2013-07-17.^ "Spyne". Spyne Website. Retrieved Feb 1, 2013. ^ "Introducing bert and bert rpc". Github blog. Retrieved July 17, 2012. ^ "How we made github fast". Github blog. Retrieved July 17, 2012. ^ libevent: Main Page. Monkey.org. Retrieved on 2013-07-17.^ "Protocol Buffers - Google's data interchange format". Google project website. Retrieved November 1, 2011. ^ "Google Web Toolkit". Google project website. Retrieved November 1, 2011.   External links[edit] RFC 1057 - Specifies version 1 of ONC RPCRFC 5531 - Specifies version 2 of ONC RPCRemote Procedure Calls (RPC) — A tutorial on ONC RPC by Dr Dave Marshall of Cardiff UniversityIntroduction to RPC Programming — A developer's introduction to RPC and XDR, from SGI IRIX documentation.                    Retrieved from "https://en.wikipedia.org/w/index.php?title=Remote_procedure_call&oldid=678273308"          Categories: Inter-process communicationMiddlewareApplication layer protocolsRemote procedure callHidden categories: Articles needing additional references from November 2009All articles needing additional referencesArticles needing additional references from December 2013                      Navigation menu                      Personal tools       Create accountLog in                                  Namespaces       ArticleTalk                                      Variants                                                                     Views       ReadEditView history                        More                                                       Search                                                                                     Navigation               Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store                   Interaction               HelpAbout WikipediaCommunity portalRecent changesContact page                   Tools               What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page                   Print/export               Create a bookDownload as PDFPrintable version                   Languages               ???????Catal?ÈeštinaDanskDeutschEspa?olEsperantoFrançais???Italiano?????LatviešuMagyarBahasa MelayuNederlands???PolskiPortugu?s???????Türkçe??????????Yor?bá??     Edit links                          This page was last modified on 28 August 2015, at 10:57.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.        Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersMobile view