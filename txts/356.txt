Django (web framework)                    From Wikipedia, the free encyclopedia                            Jump to:     navigation,      search          For other uses, see Django. Django  Screenshot   The default Django page   Original author(s)Lawrence Journal-WorldDeveloper(s)Django Software FoundationInitial release21 July 2005; 10 years ago (2005-07-21)[1]Stable release1.8.4[2] (August 18, 2015; 11 days ago (2015-08-18)) [±]Preview release1.8c1[3] (March 18, 2015; 5 months ago (2015-03-18)) [±]Development statusActiveWritten inPythonSize6.92 MBTypeWeb application frameworkLicense3-clause BSDWebsitedjangoproject.com Django (/?d????o?/ JANG-goh)[4] is a free and open source web application framework, written in Python, which follows the model–view–controller (MVC) architectural pattern.[5][6] It is maintained by the Django Software Foundation (DSF), an independent organization established as a 501(c)(3) non-profit. Django's primary goal is to ease the creation of complex, database-driven websites. Django emphasizes reusability and "pluggability" of components, rapid development, and the principle of don't repeat yourself. Python is used throughout, even for settings, files, and data models. Django also provides an optional administrative create, read, update and delete interface that is generated dynamically through introspection and configured via admin models. Some well-known sites that use Django include Pinterest,[7] Instagram,[8] Mozilla,[9] The Washington Times,[10] Disqus,[11] the Public Broadcasting Service,[12] and Bitbucket.[13]    Contents  1 History2 Features 2.1 Components2.2 Bundled applications2.3 Extensibility2.4 Server arrangements 3 Community 3.1 DjangoCon 4 Other languages 4.1 Integrated development environments for Python 5 Version history6 See also 6.1 Bibliography 7 References8 External links   History[edit] Django was born in the fall of 2003, when the web programmers at the Lawrence Journal-World newspaper, Adrian Holovaty and Simon Willison, began using Python to build applications.[14] It was released publicly under a BSD license in July 2005. The framework was named after guitarist Django Reinhardt.[14] In June 2008, it was announced that a newly formed Django Software Foundation (DSF) would maintain Django in the future.[15] Features[edit] Components[edit]     Screenshot of the Django admin interface for modifying a user account.   Despite having its own nomenclature, such as naming the callable objects generating the HTTP responses "views",[5] the core Django framework can be seen as MVC.[6] It consists of an object-relational mapper (ORM) which mediates between data models (defined as Python classes) and a relational database ("Model"); a system for processing HTTP requests with a web templating system ("View") and a regular-expression-based URL dispatcher ("Controller"). Also included in the core framework are: a lightweight and standalone web server for development and testinga form serialization and validation system which can translate between HTML forms and values suitable for storage in the databasea template system that utilizes the concept of inheritance borrowed from object-oriented programminga caching framework which can use any of several cache methodssupport for middleware classes which can intervene at various stages of request processing and carry out custom functionsan internal dispatcher system which allows components of an application to communicate events to each other via pre-defined signalsan internationalization system, including translations of Django's own components into a variety of languagesa serialization system which can produce and read XML and/or JSON representations of Django model instancesa system for extending the capabilities of the template enginean interface to Python's built in unit test framework Bundled applications[edit] The main Django distribution also bundles a number of applications in its "contrib" package, including: an extensible authentication systemthe dynamic administrative interfacetools for generating RSS and Atom syndication feedsa sites framework that allows one Django installation to run multiple websites, each with their own content and applicationstools for generating Google Sitemapsbuilt-in mitigation for cross-site request forgery, cross-site scripting, SQL injection, password cracking and other typical web attacks, most of them turned on by default[16][17]a framework for creating GIS applications Extensibility[edit]   This section relies too much on references to primary sources. Please improve this article by adding secondary or tertiary sources. (January 2015) Django's configuration system allows third party code to be plugged into a regular project, provided that it follows the reusable app[18] conventions. More than 2500 packages[19] are available to extend the framework's original behavior, providing solutions to issues the original tool didn't: registration, search, API provision and consumption, CMS, etc. This extensibility is, however, mitigated by internal components dependencies. While the Django philosophy implies loose coupling,[20] the template filters and tags assume one engine implementation, and both the auth and admin bundled applications require the use of the internal ORM. None of these filters or bundled apps are mandatory to run a Django project, but reusable apps tend to depend on them, encouraging developers to keep using the official stack in order to benefit fully from the apps ecosystem. Server arrangements[edit] Django can be run in conjunction with Apache, NGINX using WSGI, Gunicorn, or Cherokee using flup (a Python module).[21][22] Django also includes the ability to launch a FastCGI server, enabling use behind any web server which supports FastCGI, such as Lighttpd or Hiawatha. It is also possible to use other WSGI-compliant web servers.[23] Django officially supports four database backends: PostgreSQL, MySQL, SQLite, and Oracle. Microsoft SQL Server can be used with django-mssql on Microsoft operating systems,[24] while similarly external backends exist for IBM DB2,[25] SQL Anywhere[26] and Firebird.[27] There is a fork named django-nonrel, which supports NoSQL databases, such as MongoDB and Google App Engine's Datastore.[28] Django may also be run in conjunction with Jython on any Java EE application server such as GlassFish or JBoss. In this case django-jython must be installed in order to provide JDBC drivers for database connectivity, which also provides functionality to compile Django in to a .war suitable for deployment.[29] Google App Engine includes support for Django version 1.x.x[30] as one of the bundled frameworks. Community[edit] DjangoCon[edit] There is a semiannual conference for Django developers and users, named "DjangoCon", that has been held since September 2008. DjangoCon is held annually in Europe, in May or June;[31] while another is held in the United States in September, usually in Portland, Oregon.[32] The 2012 DjangoCon took place in Washington D.C from 3 to 8 September. 2013 DjangoCon was held in Chicago at the Hyatt Regency Hotel and the post-conference Sprints were hosted at Digital Bootcamp, computer training center.[33] Django mini-conferences were held in Hobart, Australia in July 2013 and Brisbane, Australia in August 2014.[34] Other languages[edit] Django's template design has been ported to other languages besides Python, providing decent cross-platform support. Some of these options are more direct ports, while others are inspired by Django, retaining its concepts but taking greater liberties to deviate from Django's design. Swig for JavaScriptLiquid for RubyTemplate::Swig for PerlTwig for PHPJinja for Python Integrated development environments for Python[edit] Main article: List of integrated development environments for Python While a number of Django developers use text editors such as Vim, Emacs, TextMate or Sublime with Django Bundle for their projects, others prefer python-specific tools providing debugging, refactoring, unit testing, etc.[35] AnjutaAptana Studio with integrated PyDevEclipse with PyDevEric Python IDEIntelliJ IDEA with Django plugin, provides functionality similar to PyCharmKodingKomodo IDEMicrosoft Visual Studio with Python Tools for Visual StudioMonoDevelopNetBeans with Django Plugin[36]Ninja IDEPyCharmPyScripterSpyder (software)SourceLairWing IDE Version history[edit] MeaningRedNot supportedYellowStill supportedGreenCurrent version VersionDateNotes0.90[37]000000002005-11-16-000016 Nov 20050.91[38]000000002006-01-11-000011 Jan 2006"new-admin"0.95[39]000000002006-07-29-000029 Jul 2006"magic removal"0.96[40]000000002007-03-23-000023 Mar 2007"newforms", testing tools1.0[41]000000002008-09-03-00003 Sep 2008API stability, decoupled admin, unicode1.1[42]000000002009-07-29-000029 Jul 2009Aggregates, transaction based tests1.2[43]000000002010-05-17-000017 May 2010Multiple db connections, CSRF, model validation1.3[44]000000002011-03-23-000023 Mar 2011Class based views, staticfiles1.4[45]000000002012-03-23-000023 Mar 2012Timezones, in browser testing, app templates. Long-term support release, supported until 1 October 2015[46]1.5[47]000000002013-02-26-000026 Feb 2013Python 3 Support, configurable user model1.6[48]000000002013-11-06-00006 Nov 2013Dedicated to Malcolm Tredinnick, db transaction management, connection pooling.1.7[49]000000002014-09-02-00002 Sep 2014Migrations, application loading and configuration. Will receive security updates until at least October 20151.8[50]000000002015-04-01-00001 Apr 2015Native support for multiple template engines. Long-term support release, supported until at least April 2018 See also[edit]  Free software portal  Wikimedia Commons has media related to Django (web framework). Comparison of web application frameworks Bibliography[edit]  Roy Greenfeld, Daniel; Roy Greenfeld, Audrey (2015), Two Scoops of Django: Best Practices for Django 1.8 (3rd ed.), Two Scoops Press, p. 531, ISBN 0981467342 Jaiswal, Sanjeev; Kumar, Ratan (June 22, 2015), Learning Django Web Development (1st ed.), Packt, p. 405, ISBN 1783984406 Ravindrun, Arun (March 31, 2015), Django Design Patterns and Best Practices (1st ed.), Packt, p. 180, ISBN 1783986646 Osborn, Tracy (May 2015), Hello Web App (1st ed.), Tracy Osborn, p. 142, ISBN 0986365912 Bendoraitis, Aidas (October 2014), Web Development with Django Cookbook (1st ed.), Packt, p. 294, ISBN 178328689X Baumgartner, Peter; Malet, Yann (2015), High Performance Django (1st ed.), Lincoln Loop, p. 184, ISBN 1508748128 Elman, Julia; Lavin, Mark (2014), Lightweight Django (1st ed.), O'Reilly Media, p. 246, ISBN 149194594X Percival, Harry (2014), Test-Driven Development with Python (1st ed.), O'Reilly Media, p. 480, ISBN 1449364829   This list is an extraction from Current Django Books References[edit]  ^ "Django FAQ". Retrieved 2 September 2014. ^ Graham, Tim (18 August 2015). "Security releases issued: 1.8.4, 1.7.10, 1.4.22". Django Weblog. Retrieved 19 August 2015. ^ Graham, Tim (18 March 2015). "Security releases issued". Django Weblog. Retrieved 20 March 2015. ^ What does "Django" mean, and how do you pronounce it?^ a b Django FAQ about MVC in Django^ a b Adrian Holovaty, Jacob Kaplan-Moss et al. The Django Book. Django follows this MVC pattern closely enough that it can be called an MVC framework ^ Pinterest: What technologies were used to make Pinterest? - Quora^ "What Powers Instagram: Hundreds of Instances, Dozens of Technologies". ^ Python | MDN^ Opensource.washingtontimes.com. Retrieved on 2014-05-30.^ "Scaling Django to 8 Billion Page Views". ^ "20 Creative Websites Running Django". ^ https://code.djangoproject.com/wiki/DjangoSuccessStoryBitbucket^ a b "Django's History". The Django Book. Retrieved 6 June 2013. ^ Announcing the Django Software Foundation^ "Security in Django". Django Project. Retrieved March 25, 2013. ^ Socol, James (2012). "Best Basic Security Practices (Especially with Django)". Retrieved March 25, 2013. ^ What is a reusable app?^ djangopackages.com, an open source package repository for the Django framework^ Django design philosophies^ Django documentation of deployment^ Cookbook: Setting up Django^ How to use Django with Apache and mod_wsgi. Official Django documentation.^ https://bitbucket.org/Manfre/django-mssql/src^ https://code.google.com/p/ibm-db/^ https://code.google.com/p/sqlany-django/^ https://github.com/maxirobaina/django-firebird^ http://django-nonrel.org/^ https://code.google.com/p/django-jython/^ Running Pure Django Projects on Google App Engine. Code.google.com (2010-11-01). Retrieved on 5 December 2011.^ DjangoCon EU series, Lanyrd.com^ DjangoCon US series, Lanyrd.com^ "DjangoCon". DjangoCon. Retrieved 29 July 2012. ^ DjangoCon AU 2013. Djangocon.com.au. Retrieved on 2014-05-30.^ Django development IDEs discussion at Stackoverflow^ NetBeans Django Plugin^ "Introducing Django 0.90". Django weblog. Retrieved 2 February 2013.^ "Django 0.91 released". Django weblog. Retrieved 2 February 2013.^ "Introducing Django 0.95". Django weblog. Retrieved 2 February 2013.^ "Announcing Django 0.96!". Django weblog. Retrieved 2 February 2013.^ "Django 1.0 released!". Django weblog. Retrieved 2 February 2013.^ "Django 1.1 released". Django weblog. Retrieved 2 February 2013.^ "Django 1.2 released". Django weblog. Retrieved 2 February 2013.^ "Django 1.3 released". Django weblog. Retrieved 2 February 2013.^ "Django 1.4 released". Django weblog. Retrieved 2 February 2013.^ https://docs.djangoproject.com/en/1.7/internals/release-process/#long-term-support-lts-releases^ "Django 1.5 released" Django weblog. Retrieved 27 February 2013.^ "Django 1.6 released" Django weblog. Retrieved 6 November 2013.^ "Django 1.7 released" Django weblog. Retrieved 4 September 2014.^ "Django 1.8 released" Django weblog. Retrieved 2 April 2015.  External links[edit] Django Official Documentation - Current and detailed documentation on nearly every aspect of Django. It includes a version selector for information pertaining to specific versions of Django.Two Scoops Press Curated List of Django Tutorials - A comprehensive list of up-to-date Django tutorials.Tango with Django - A beginner's tutorial to web development with Django.Taskbuster - A tutorial for experienced coders who want to learn Django.Django Packages - A directory of reusable apps, sites, tools, and more for Django projects.Django Basics - Installing Django and Setting Up a Project and an AppDjango Girls official tutorial . Tutorial was built in mind for people starting learning programming.    vte  Python web application frameworks   BlueBreamCherryPyDjangoFlaskGrokNagareNevowPyjamasPylonsPyramidQuixoteSpyceTACTICTornadoTurboGearsTwistedWebWebwareweb2pyZope 2more...       vte  Web application frameworks ASP.NET  ASP.NET Dynamic DataASP.NET MVCASP.NET Web FormsBFCDotNetNukeMonoRailOpenRastaUmbraco  ColdFusion  CFWheelsColdBox PlatformColdSpringFuseboxMach-IIModel-Glue  Common Lisp  CL-HTTPUnCommon WebWeblocks  C++  CppCMSWt  Haskell  HappstackYesodSnap  Java  AppFuseFlexiveGrailsGWTICEfacesItsNatJavaServer FacesJHipsterJspxJuzuMakumbaOpenXavaPlayReasonable Server FacesRemote Application PlatformRIFESeamSpringStripesStrutsTapestryVaadinWebWorkWicketWaveMakerZK  JavaScript  Ample SDKAngularJSBackbone.jsChaplin.jsClosureDojo ToolkitEmber.jsExt JSjQueryMeteorMooToolsPrototypeRicoscript.aculo.usSencha TouchSproutCoreWakanda  Perl  CatalystDancerMasonMaypoleMojoliciousWebGUI  PHP  CakePHPCodeIgniterDrupaleZ PublishFat-FreeFuelPHPHordeJoomla!KohanaLaravelLithiumMidgardMODXNette FrameworkPhalconPRADOQcodoSeagullSilverStripeSymfonyTYPO3WordPressXarayaXOOPSYiiZend Framework  Python  BlueBreamCherryPyDjangoFlaskGrokNevowPyjamasPylonsPyramidQuixoteTACTICTornadoTurboGearsweb2pyWebwareZope 2  Ruby  CampingMerbPadrinoRuby on RailsSinatra  Scala  LiftPlayScalatra  Smalltalk  AIDA/WebSeaside  Other languages  Application Express (PL/SQL)Grails (Groovy)Kepler (Lua)OpenACS (Tcl)SproutCore (JavaScript/Ruby)SymbolicWeb (Clojure)Yaws (Erlang)                       Retrieved from "https://en.wikipedia.org/w/index.php?title=Django_(web_framework)&oldid=678437493"          Categories: Python web application frameworksFree software programmed in PythonWeb application frameworksSoftware using the BSD licenseHidden categories: Use dmy dates from September 2012Articles lacking reliable references from January 2015All articles lacking reliable referencesCommons category template with no category setCommons category without a link on Wikidata                      Navigation menu                      Personal tools       Create accountLog in                                  Namespaces       ArticleTalk                                      Variants                                                                     Views       ReadEditView history                        More                                                       Search                                                                                     Navigation               Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store                   Interaction               HelpAbout WikipediaCommunity portalRecent changesContact page                   Tools               What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page                   Print/export               Create a bookDownload as PDFPrintable version                   Languages               ????????????ÈeštinaDeutschEspa?ol?????Français???Italiano?????Latviešu??????Nederlands???Norsk bokm?lPolskiPortugu?sRomânã???????SvenskaTürkçe????????????     Edit links                          This page was last modified on 29 August 2015, at 11:21.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.        Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersMobile view