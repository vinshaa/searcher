Application server                    From Wikipedia, the free encyclopedia           (Redirected from Application Server)                   Jump to:     navigation,      search             This article has multiple issues. Please help improve it or discuss these issues on the talk page.   This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (February 2012)   This article may require cleanup to meet Wikipedia's quality standards. No cleanup reason has been specified. Please help improve this article if you can. (January 2011)   An application server is a software framework that provides both facilities to create web applications and a server environment to run them.[1] Most Application Server Frameworks contain a comprehensive service layer model. An application server acts as a set of components accessible to the software developer through an API defined by the platform itself. For Web applications, these components are usually performed in the same running environment as its web server(s), and their main job is to support the construction of dynamic pages. However, many application servers target much more than just Web page generation: they implement services like clustering, fail-over, and load-balancing, so developers can focus on implementing the business logic.[2] In the case of Java application servers, the server behaves like an extended virtual machine for running applications, transparently handling connections to the database on one side, and, often, connections to the Web client on the other.[citation needed] Other uses of the term may refer to the services that a server makes available or the computer hardware on which the services run.[citation needed]    Contents  1 History2 Java application servers3 .NET Framework 3.1 Microsoft3.2 Third-party 4 PHP application servers5 Other platforms6 Mobile application servers 6.1 Purpose6.2 Common features6.3 Mobile application servers vs. application servers vs. web servers6.4 Deployment models6.5 Third Party 7 Advantages of application servers8 See also9 References   History[edit] The term was originally used when discussing early client–server systems to differentiate servers that contain application logic SQL services[3] and middleware servers as distinct from other types of data-servers. In the late 2000's, because of the ubiquity of the web-browser as an application deployment strategy, there is a mistaken belief that the term refers to a web application environment. However, web applications are within the scope of application-server technologies.[clarification needed] Java application servers[edit] Java Platform, Enterprise Edition or Java EE (was J2EE) defines the core set of API and features of Java Application Servers. The Web modules include servlets, and JavaServer Pages. Enterprise JavaBeans are used to manage transactions. According to the J2EE blueprints the business logic of an application resides in Enterprise JavaBeans - a modular server component providing many features, including declarative transaction management, and improving application scalability. Some Java Application Servers leave off many Java EE features like EJB and JMS including Tomcat from Apache, and Jetty from Eclipse Foundation. Their focus is more on Java Servlets and JavaServer Pages. There are many open source Java application servers that support Java EE including JOnAS from Object Web, JBoss AS from JBoss (division of Red Hat), Geronimo from Apache, TomEE from Apache, Resin Java Application Server from Caucho Technology, Blazix from Desiderata Software, Enhydra Server from Enhydra.org, and GlassFish from Oracle. Commercial Java application servers have been dominated by WebLogic Application Server by Oracle, WebSphere Application Server from IBM and the open source JBoss Enterprise Application Platform (JBoss EAP) by Red Hat. A Java Server Page (JSP) executes in a web container. JSPs provide a way to create HTML pages by embedding references to the server logic within the page. HTML coders and Java programmers can work side by side by referencing each other's code from within their own. The application servers mentioned above mainly serve web applications, and services via RMI, EJB, JMS and SOAP. Some application servers target networks other than web-based ones: Session Initiation Protocol servers, for instance, target telephony networks.[citation needed] .NET Framework[edit] Microsoft[edit] Microsoft positions their middle-tier applications and services infrastructure in the Windows Server operating system and the .NET Framework technologies in the role of an application server.[4] The Windows Application Server role includes Internet Information Services (IIS) to provide web server support, the .NET Framework to provide application support, ASP.NET to provide server side scripting, COM+ for application component communication, Message Queuing for multithreaded processing, and the Windows Communication Foundation (WCF) for application communication.[5] Third-party[edit] Mono (a cross platform open-source implementation of .NET supporting nearly all its features, with the exception of Windows OS-specific features), sponsored by Novell, Inc., licensed under GPLBase4 Application Server, an open source projectTNAPS Application Server, freeware application server, developed by TN LLCcc Devnet Data Access Server, A generic application server for building native Windows Desktop, iOS and Android applications.. PHP application servers[edit] PHP application servers are used for running and managing PHP applications. Zend Server, built by Zend Technologies, provides application server functionality for the PHP-based applications. appserver.io, built by TechDivision GmbH is a multithreaded application server for PHP written in PHP. Other platforms[edit] Open-source application servers also come from other vendors, such as Appaserver. Non-Java offerings have no formal interoperability specifications on par with the Java Specification Request. As a result, interoperability between non-Java products is poor compared to that of Java EE based products. Mobile application servers[edit] A mobile app server is mobile middleware that makes back-end systems accessible to mobile applications to support Mobile application development. Much like a web server that stores, processes and delivers web pages to clients, a mobile app server bridges the gap from existing infrastructure to mobile devices. Purpose[edit] Although most standards-based infrastructure (including SOAs ) are designed to connect to any independent of any vendor, product or technology, most enterprises have trouble connecting back-end systems to mobile applications, because mobile devices add the following technological challenges:[6] Limited resources – mobile devices have limited power and bandwidthIntermittent connectivity[7] – cellular service and wifi coverage is often not continuousDifficult to secure[8] – mobility and BYOD make it hard to secure mobile devices The purpose of a mobile application server is to build on existing infrastructure to accommodate mobile devices. Common features[edit] Core capabilities of a mobile application services include Data routing– data is packaged in smaller (REST) objects with some business logic to minimize demands on bandwidth and batteryOrchestration– transactions and data integration across multiple sourcesAuthentication service– secure connectivity to back-end systems is managed by the mobile middlewareOff-line support– allows users to access and use data even though device is not connectedSecurity– data encryption, device control, SSL, call logging Mobile application servers vs. application servers vs. web servers[edit] Mobile application servers, Application servers, and web servers serve similar purposes: they are a piece of middleware that connects back-end systems to the users that need to access them, but the technology in each of the three differs. Application servers - developed before the ubiquity of web-based applications - expose back-end business logic through various protocols, sometimes including HTTP, and manage security, transaction processing, resource pooling, and messaging.[9] When web-based applications grew in popularity, application servers did not meet the needs of developers, and the web server was created to fill the gap.[citation needed] Web servers provide the caching and scaling functionality demanded by web access and not provided by application servers. They convert requests to static content, and serve only HTTP content.[10] Over time, application servers and web servers have morphed from two previously distinct categories, blended features, and arguably have merged.[citation needed] Mobile application servers are on a similar path.[citation needed] The emergence of mobile devices presents the need for functionality not anticipated by the developers of traditional application server developers, and mobile application servers fill this gap. They take care of the security, data management and off-line requirements not met by existing infrastructure, and present content exclusively in REST. Over time, these three categories may fully merge and be available in a single product, but the root functions differ. Deployment models[edit] A mobile application server can be deployed : On premiseCloudPrivate cloudPlatform as a service (PaaS) Third Party[edit] Akula from VerivoKonyOne from KonyMobileFrameMobileFirst Server from IBM Advantages of application servers[edit] Data and code integrity By centralizing business logic on an individual server or on a small number of server machines, updates and upgrades to the application for all users can be guaranteed. There is no risk of old versions of the application accessing or manipulating data in an older, incompatible manner.Centralized configurationChanges to the application configuration, such as a move of database server, or system settings, can take place centrally.SecurityA central point through which service-providers can manage access to data and portions of the application itself counts as a security benefit, devolving responsibility for authentication away from the potentially insecure client layer without exposing the database layer.PerformanceBy limiting the network traffic to performance-tier traffic the client–server model improves the performance of large applications in heavy usage environments.[citation needed]Total cost of ownership (TCO)In combination, the benefits above may result in cost savings to an organization developing enterprise applications. In practice, however, the technical challenges of writing software that conforms to that paradigm, combined with the need for software distribution to distribute client code, somewhat negate these benefits.[citation needed]Transaction SupportA transaction represents a unit of activity in which many updates to resources (on the same or distributed data sources) can be made atomic (as an indivisible unit of work). End-users can benefit from a system-wide standard behaviour, from reduced time to develop, and from reduced costs. As the server does a lot of the tedious code-generation, developers can focus on business logic. See also[edit] Comparison of application servers — a list of Web application servers listed by programming language.Stand-alone server References[edit]  ^ "What is an App Server?". http://www.theserverside.com/. Retrieved 2010-02-29. an application server provides an environment where applications can run, no matter what the applications are or what they do  Check date values in: |accessdate= (help)^ Stefano Ceri, Piero Fraternali, Aldo Bongio, Marco Brambilla, Sara Comai, Maristella Matella. "Designing Data Intensive Web Applications, 2Q03".  Missing or empty |url= (help); |accessdate= requires |url= (help)^ "Analysis in the Application Server Environment". Microsoft Corporation. 1 June 1997. ^ TechNet: Application Server^ TechNet: Application Server Role^ "Why Mobile App Development Requires More than an SOA date=19 November 2014". ^ "Why offline access is a game-changer for enterprise mobility". 17 October 2013. ^ "A Billion Smartphone Users May Be Affected by the Heartbleed Security Flaw". 11 April 2014. ^ "App server, Web server: What's the difference?". ^ "What is the difference between application server and web server?".      vte  Web interfaces Server-side   Protocols   CGISCGIFCGIAJPWSRPWebSocket   Server APIs   C NSAPIC ASAPIC ISAPICOM ASPJava servlet container Portlet container CIL System.Web.IHttpHandlerPython WSGIRuby RackJavaScript JSGIPerl PSGILua WSAPIOWIN   Apache modules   mod_jkmod_lispmod_monomod_parrotmod_perlmod_phpmod_proxymod_pythonmod_wsgimod_rubyPhusion Passenger   Topics   Web resource vs. Web serviceOpen APIWebhookApplication server comparison    Client-side   Browser APIs   C NPAPI LiveConnectXPConnect C NPRuntimeC PPAPI NaCl ActiveX   Web APIs    W3C   AudioCanvasCORSFileGeolocationIndexedDBMicrodataSSESVGVideoWebRTCWebSocketWeb messagingWeb storageWeb workerXMLHttpRequest   Khronos   WebCLWebGL   Others   GearsWeb SQL Database (formerly W3C)    Topics   MashupWeb IDL                        Retrieved from "https://en.wikipedia.org/w/index.php?title=Application_server&oldid=678124894"          Categories: Software architectureServers (computing)Hidden categories: CS1 errors: datesPages using web citations with no URLPages using citations with accessdate and no URLArticles needing additional references from February 2012All articles needing additional referencesArticles needing cleanup from January 2011All articles needing cleanupCleanup tagged articles without a reason field from January 2011Wikipedia pages needing cleanup from January 2011All articles with unsourced statementsArticles with unsourced statements from February 2012Articles with unsourced statements from January 2011Wikipedia articles needing clarification from February 2012Articles with unsourced statements from December 2014Articles with unsourced statements from July 2009Articles with unsourced statements from August 2010                      Navigation menu                      Personal tools       Create accountLog in                                  Namespaces       ArticleTalk                                      Variants                                                                     Views       ReadEditView history                        More                                                       Search                                                                                     Navigation               Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store                   Interaction               HelpAbout WikipediaCommunity portalRecent changesContact page                   Tools               What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page                   Print/export               Create a bookDownload as PDFPrintable version                   Languages               Catal?DanskDeutschEspa?ol?????Français???HrvatskiInterlinguaItaliano????????????MagyarNederlands???PolskiPortugu?s???????Svenska??????????Ti?ng Vi?t??     Edit links                          This page was last modified on 27 August 2015, at 14:41.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.        Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersMobile view