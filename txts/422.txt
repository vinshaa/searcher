ZK (framework)                    From Wikipedia, the free encyclopedia                            Jump to:     navigation,      search             This article has multiple issues. Please help improve it or discuss these issues on the talk page.   This article's use of external links may not follow Wikipedia's policies or guidelines. Please improve this article by removing excessive or inappropriate external links, and converting useful links where appropriate into footnote references. (July 2012)   This article contains content that is written like an advertisement. Please help improve it by removing promotional content and inappropriate external links, and by adding encyclopedic content written from a neutral point of view. (April 2013)   ZK (framework)Developer(s)www.potix.comStable release7.0.5 / 24 March 2015; 5 months ago (2015-03-24)Operating systemCross-platform (JVM)TypeAjax Web FrameworkLicenseLGPL / ZOL / Commercial[1]Websitezkoss.org  Free software portal  ZK is an open-source Ajax Web application framework, written in Java,[2][3][4] that enables creation of graphical user interfaces for Web applications with little required programming knowledge. The core of ZK consists of an Ajax-based event-driven mechanism, over 123 XUL and 83 XHTML-based components,[5] and a mark-up language for designing user interfaces. Programmers design their application pages in feature-rich XUL/XHTML components, and manipulate them upon events triggered by end user's activity. It is similar to the programming model found in desktop GUI-based applications. ZK uses a server-centric approach in which the content synchronization of components and the event pipe-lining between clients and servers are automatically done by the engine, and Ajax plumbing codes are completely transparent to web application developers. Therefore, the end users get the similar engaged interactivity and responsiveness as a desktop application, while programmers' development retains a similar simplicity to that of desktop applications. It's important to note that ZK does not use the standard web request <=> response mechanism and DOES NOT send form fields to the server using GET + query parameters or one POST request. Instead, AJAX requests are sent to the server to update the internal state of each screen widget. At the browser, ZK only downloads a JSON description of the web page and uses a client renderer to turn that into a UI. It's quite efficient and under closer inspection, does not download everything at once. A look at the traffic between client and the server reveals several requests going back and forth between client and browser until the page rendering eventually completes. The optional client-side customization allows the developer to leverage the client-side resources with the so-called server+client fusion, for customization and to reduce the Ajax traffic. In addition to component-based programming in a manner similar to Swing, ZK supports a mark-up language for rich user interface definition called ZUML. ZUML is designed for non-programmer developers to design user interfaces intuitively.ZUML allows developers to meld different markup languages, such as Mozilla XUL language and XHTML, seamlessly into the same page.ZUML allows developers to embed scripts in pure Java language (interpreted by BeanShell) and use EL expressions to manipulate the components and access data.    Contents  1 Features2 Differences from XUL3 System requirements4 Prerequisites of programming skills 4.1 Required4.2 Optional 5 ZUML6 Client-side technologies7 See also8 References9 External links   Features[edit]     webui interface of iDempiere under ZK6   Simply Java. ZK is renowned for its "Ajax without JavaScript" approach, enabling developers to build rich internet applications transparently without any knowledge of Ajax and JavaScript.Responsive design themes along with Bootstrap supportHTML 5 and CSS 3 supportOver 100 Ajax components offer UI designers a variety of feature rich components to meet the demands of enterprise Ajax applications.ZUML makes the design of rich user interfaces similar to authoring HTML pages. ZUML is a variant of XUL inheriting all features available to XML, and separates the UI definition from the run-time logic.Event-driven component-based model (similar to desktop programming models) supporting multiple event driven GUI design patterns.[6]Support for Model-View-Controller (MVC)[7] decoupling View, Model and Controller for easy to develop and maintain.Model-View-Presenter[8] and Model-View-ViewModel (MVVM)[9] design patterns that decouples the controller furthermore to minimize the code required and to maximize the maintainability.Databinding capability via in-ZUML-page annotations that transparently automates CRUD and state synchronization between UI view and the data and POJO.Application components, such as spreadsheet, pivot table, and calendar.Embedding scripting support with Java (Beanshell[10]). This is an important benefit as you can use a unified programming language for both user interface and backend programming. Optional support for other serverside Java scripting in other languages such as JavaScript (Rhino[11]), Ruby (JRuby[12]), Python (Jython[13]) and Groovy.[14]Support for integrating with existing web frameworks via a JSP custom tag library, JSF support, Portlet, and a Servlet Filter. Has support for Spring and Hibernate.Extensible in that programmers can create new custom UI controls. Groups of controls can be re-used as a macro component.Extensive charting with ZK Charts Differences from XUL[edit] ZK is a server side framework which emits HTML and thus does not depend on client side presence of Gecko making it portable to any browser. ZK takes ZUML (xul and xhtml) serverside pages as input and outputs dhtml for the browser.ZK processes user interface logic on the server in Java. This increases choice in the scripting engines and application libraries that can be used to create logic. Presentation effects can be delegated to the browser using the Client-side Actions feature to reduce server load for dhtml effects. Running the application logic on the server in a single application container reduces the amount of cross browser and browser version testing when compared to extensively programming the DOM at the browser.While ZK and XUL have an overlapping subset of components, ZK has its own unique component sets. The component library can be extended with custom components. Macro components can be defined that are composites of components.ZK provides serverside databinding annotations to declaratively bind UI components to serverside data.Look and Feel differences. System requirements[edit] JRE version 1.4 or laterA Web server supporting Servlet 2.3 or later Prerequisites of programming skills[edit]   This section contains instructions, advice, or how-to content. The purpose of Wikipedia is to present facts, not to train. Please help improve this article either by rewriting the how-to content or by moving it to Wikiversity, Wikibooks or Wikivoyage. (March 2014) Required[edit] Basic knowledge of Java or a Java scripting engine language such as Groovy, Rhino (Java JavaScript), JRuby (Java Ruby) or Jython (Java Python)Basic knowledge of HTML and XUL Optional[edit] Knowledge of a scripting language to write the glue logic (running on the server): BeanShell (Java interpreter), JavaScript, Groovy, Ruby, Scala and Python currently supported. Object Oriented Programming. You can choose to do AWT/Swing style programming against the ZK API. You can choose to program one or more custom UI controller classes in Java. This is entirely optional. Alternatively you can choose to use zscript script tags for user interface logic which is similar to dhtml programming.Servlet Programming. ZK is built on top of the Servlet API. You can choose to do regular Servlet programming and use ZUML as the page language.Ajax. ZK is built on top of Ajax but it automatically converts user input at the browser to Java events at the server so you do not have to either program or understand browser Ajax.JavaScript (on the client side). You can choose to use client side actions on your components for performing dhtml logic but most user interfaces do not require this.Declarative Databindings. ZK has an optional syntax for binding user interface controls to your POJO Java Beans. ZK will automatically call your POJO setter/getter methods with zero programming in response to user input at the browser.Expression Language. ZK supports JSTL style EL. ZUML[edit] ZUML (ZK User Interface Markup Language) is a markup language for rich user interfaces definition. ZUML is designed for non-programmers to design user interfaces efficiently with the ZUML markupZUML allows developer to meld different markup languages, such as Mozilla XUL language and XHTML, seamlessly into the same page.ZUML allows developers to embed script in pure Java language (interpreted by BeanShell) and use EL expressions to manipulate the components and access data.ZUML is supported by ZK.Official Documentation : ZUML Reference Client-side technologies[edit] ZK is a server-centric framework. Technically you don't need to know about the implementation at the client side. It is how ZK Mobile running on Java Mobile VM is done. Since ZK 5.0, the so-called Server+client Fusion[15] architecture is introduced. Developers are allowed to access the client-side widgets directly if they want to. ZK Client Engine is based on jQuery.[16] Technically you can use jQuery-compliant libraries and widgets. See also[edit]  Free software portal  List of rich internet application frameworksComparison of JavaScript frameworksList of Ajax frameworksList of widget toolkits based on JavaScript References[edit]  ^ ZK 3 and older versions are licensed under GPL.^ Chen, Henri (2008). ZK - Ajax without JavaScript. Apress. p. 125. ISBN 978-1-59059-901-3. ^ Staeuble, Markus (2008). ZK Developer's Guide. Packt Publishing. p. 184. ISBN 978-1-84719-200-4. ^ Van der Schyff, Andre (2009-03-31). "A look at MVC frameworks". ITWeb. MVC frameworks provide limited functionality when compared to ZK, Echo and other Java Web frameworks. ^ "ZK Explorer". Zkoss.org. Retrieved 2010-08-25. ^ Massey, Simon. "Implementing event-driven GUI patterns using the ZK Java AJAX framework". http://www.ibm.com/. IBM. Retrieved 5 July 2014. ^ "ZK - ZK Developer's Reference/MVC - Documentation". Books.zkoss.org. 2014-01-27. Retrieved 2014-03-02. ^ "ZK - Small Talks/2011/November/Hello ZK MVVM - Documentation". Books.zkoss.org. Retrieved 2014-03-02. ^ "ZK - Small Talks/2011/November/MVVM in ZK 6 - Design your first MVVM page - Documentation". Books.zkoss.org. Retrieved 2014-03-02. ^ "Lightweight Scripting for Java". BeanShell. Retrieved 2014-03-02. ^ "Rhino | MDN". Mozilla.org. 2012-08-09. Retrieved 2014-03-02. ^ "Home  JRuby.org". Jruby.codehaus.org. 2014-02-25. Retrieved 2014-03-02. ^ "Jython : Homepage". Jython.org. Retrieved 2014-03-02. ^ "Groovy - Home". Groovy.codehaus.org. 2014-02-18. Retrieved 2014-03-02. ^ Clare, Timothy (02-09-2010). "Server+client Fusion: An Architectural Proposal". Dr. Dobb's. A good framework architecture is flexible empowering developers and architects to implement their applications in a smart and elegant manner.  Check date values in: |date= (help)^ Mahajan, Sachin (2010-10-19). "Enhance Ajax development with a fusion of jQuery, ZK, and Java code". IBM developerWorks. The marriage between server-side Java code and jQuery can help you tackle the challenges in enterprise Ajax application development.   External links[edit] Wikibooks has a book on the topic of: ZK Official websiteZK Live DemoAn Interview with ZK Creator Tom YehTutorial: ZK Rich Client Framework and Agile DevelopmentTutorials for Informix applications with ZK I II III IV V VI VIITutorials from IBM developerWorks I II IIIIVZK - Ajax without JavaScript published by ApressZK Developer's Guide published by PacktRia com Framework ZK (Portuguese) published by Editora Ci?ncia Moderna LtdaRich Internet applications using ZK at IBM developerWorksImplementing event-driven GUI patterns using the ZK Java AJAX framework at IBM developerWorksNext-Generation Applications Using Ajax and OpenAjax at OpenAjax AllianceZero-code AJAX framework sought at InfoWorld.Designing rich AJAX Web interfaces with ZK at Linux.comAJAX, DHTML and JavaScript Libraries at Smashing MagazineZK and Agile at TheServerSideThe ZK Framework at Dr.Dobb's PortalExplore the CDI programming model in ZK at IBM developerWorksZK - AJAX without the JavaScript at IBM developerWorksAjax with the ZK Framework at developer.comZK Ajax Java Web Framework: Ajax with no JavaScript at infoQ.com    vte  Web application frameworks ASP.NET  ASP.NET Dynamic DataASP.NET MVCASP.NET Web FormsBFCDotNetNukeMonoRailOpenRastaUmbraco  ColdFusion  CFWheelsColdBox PlatformColdSpringFuseboxMach-IIModel-Glue  Common Lisp  CL-HTTPUnCommon WebWeblocks  C++  CppCMSWt  Haskell  HappstackYesodSnap  Java  AppFuseFlexiveGrailsGWTICEfacesItsNatJavaServer FacesJHipsterJspxJuzuMakumbaOpenXavaPlayReasonable Server FacesRemote Application PlatformRIFESeamSpringStripesStrutsTapestryVaadinWebWorkWicketWaveMakerZK  JavaScript  Ample SDKAngularJSBackbone.jsChaplin.jsClosureDojo ToolkitEmber.jsExt JSjQueryMeteorMooToolsPrototypeRicoscript.aculo.usSencha TouchSproutCoreWakanda  Perl  CatalystDancerMasonMaypoleMojoliciousWebGUI  PHP  CakePHPCodeIgniterDrupaleZ PublishFat-FreeFuelPHPHordeJoomla!KohanaLaravelLithiumMidgardMODXNette FrameworkPhalconPRADOQcodoSeagullSilverStripeSymfonyTYPO3WordPressXarayaXOOPSYiiZend Framework  Python  BlueBreamCherryPyDjangoFlaskGrokNevowPyjamasPylonsPyramidQuixoteTACTICTornadoTurboGearsweb2pyWebwareZope 2  Ruby  CampingMerbPadrinoRuby on RailsSinatra  Scala  LiftPlayScalatra  Smalltalk  AIDA/WebSeaside  Other languages  Application Express (PL/SQL)Grails (Groovy)Kepler (Lua)OpenACS (Tcl)SproutCore (JavaScript/Ruby)SymbolicWeb (Clojure)Yaws (Erlang)                       Retrieved from "https://en.wikipedia.org/w/index.php?title=ZK_(framework)&oldid=678296565"          Categories: Java (programming language) librariesJava platformUser interface markup languagesWeb application frameworksAjax (programming)Rich Internet application frameworksJava enterprise platformHidden categories: CS1 errors: datesWikipedia external links cleanup from July 2012Wikipedia spam cleanup from July 2012Articles with a promotional tone from April 2013All articles with a promotional toneArticles needing cleanup from March 2014All pages needing cleanupArticles containing how-to sections                      Navigation menu                      Personal tools       Create accountLog in                                  Namespaces       ArticleTalk                                      Variants                                                                     Views       ReadEditView history                        More                                                       Search                                                                                     Navigation               Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store                   Interaction               HelpAbout WikipediaCommunity portalRecent changesContact page                   Tools               What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page                   Print/export               Create a bookDownload as PDFPrintable version                   Languages               Espa?olFrançais???Românã?????????     Edit links                          This page was last modified on 28 August 2015, at 14:26.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.        Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersMobile view