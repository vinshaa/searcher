SOAP                    From Wikipedia, the free encyclopedia                            Jump to:     navigation,      search          This article is about the computer network protocol.  For other uses, see Soap (disambiguation).   This article's lead section may not adequately summarize key points of its contents. Please consider expanding the lead to provide an accessible overview of all important aspects of the article. (June 2012) SOAP, originally an acronym for Simple Object Access Protocol, is a protocol specification for exchanging structured information in the implementation of web services in computer networks. It uses XML Information Set for its message format, and relies on other application layer protocols, most notably Hypertext Transfer Protocol (HTTP) or Simple Mail Transfer Protocol (SMTP), for message negotiation and transmission.    Contents  1 Characteristics2 History3 Specification 3.1 Processing model 4 SOAP Building Blocks5 Transport methods6 Message format7 Example message8 Technical critique 8.1 Advantages8.2 Disadvantages 9 See also10 References11 Further reading12 External links   Characteristics[edit] SOAP can form the foundation layer of a web services protocol stack, providing a basic messaging framework for web services. This XML-based protocol consists of three parts: an envelope, which defines the message structure[1] and how to process ita set of encoding rules for expressing instances of application-defined datatypesa convention for representing procedure calls and responses SOAP has three major characteristics: extensibility (security and WS-routing are among the extensions under development)neutrality (SOAP can operate over any transport protocol such as HTTP, SMTP, TCP, UDP, or JMS)independence (SOAP allows for any programming model) As an example of what SOAP procedures can do, an application can send a SOAP request to a server that has web services enabled—such as a real-estate price database—with the parameters for a search. The server then returns a SOAP response (an XML-formatted document with the resulting data), e.g., prices, location, features. Since the generated data comes in a standardized machine-parsable format, the requesting application can then integrate it directly. The SOAP architecture consists of several layers of specifications for: message formatMessage Exchange Patterns (MEP)underlying transport protocol bindingsmessage processing modelsprotocol extensibility SOAP evolved as a successor of XML-RPC, though it borrows its transport and interaction neutrality and the envelope/header/body from elsewhere (probably from WDDX).[citation needed] History[edit] SOAP was designed as an object-access protocol in 1998 by Dave Winer, Don Box, Bob Atkinson, and Mohsen Al-Ghosein for Microsoft, where Atkinson and Al-Ghosein were working at the time.[2] The SOAP specification[3] is currently maintained by the XML Protocol Working Group[4] of the World Wide Web Consortium. SOAP originally stood for "Simple Object Access Protocol" but version 1.2 of the standard dropped this acronym.[5] Version 1.2 became a W3C recommendation on June 24, 2003. After SOAP was first introduced, it became the underlying layer of a more complex set of Web Services, based on Web Services Description Language (WSDL) and Universal Description Discovery and Integration (UDDI). These different services, especially UDDI, have proved to be of far less interest, but an appreciation of them gives a more complete understanding of the expected role of SOAP compared to how web services have actually evolved. Specification[edit]     SOAP structure   The SOAP specification defines the messaging framework, which consists of: The SOAP processing model defining the rules for processing a SOAP messageThe SOAP extensibility model defining the concepts of SOAP features and SOAP modulesThe SOAP underlying protocol binding framework describing the rules for defining a binding to an underlying protocol that can be used for exchanging SOAP messages between SOAP nodesThe SOAP message construct defining the structure of a SOAP message Processing model[edit] The SOAP processing model describes a distributed processing model, its participants, the SOAP nodes, and how a SOAP receiver processes a SOAP message. The following SOAP nodes are defined: SOAP sender –  a SOAP node that transmits a SOAP messageSOAP receiver –  a SOAP node that accepts a SOAP messageSOAP message path –  the set of SOAP nodes through which a single SOAP message passesInitial SOAP sender (Originator) –  the SOAP sender that originates a SOAP message at the starting point of a SOAP message pathSOAP intermediary –  a SOAP intermediary is both a SOAP receiver and a SOAP sender and is targetable from within a SOAP message. It processes the SOAP header blocks targeted at it and acts to forward a SOAP message towards an ultimate SOAP receiver.Ultimate SOAP receiver –  the SOAP receiver that is a final destination of a SOAP message. It is responsible for processing the contents of the SOAP body and any SOAP header blocks targeted at it. In some circumstances, a SOAP message might not reach an ultimate SOAP receiver, for example because of a problem at a SOAP intermediary. An ultimate SOAP receiver cannot also be a SOAP intermediary for the same SOAP message. SOAP Building Blocks[edit] A SOAP message is an ordinary XML document containing the following elements: ElementDescriptionRequiredEnvelopeIdentifies the XML document as a SOAP message.YesHeaderContains header information.NoBodyContains call, and response information.YesFaultProvides information about errors that occurred while processing the message.No Transport methods[edit] Both SMTP and HTTP are valid application layer protocols used as transport for SOAP, but HTTP has gained wider acceptance as it works well with today's internet infrastructure; specifically, HTTP works well with network firewalls. SOAP may also be used over HTTPS (which is the same protocol as HTTP at the application level, but uses an encrypted transport protocol underneath) with either simple or mutual authentication; this is the advocated WS-I method to provide web service security as stated in the WS-I Basic Profile 1.1. This is a major advantage over other distributed protocols like GIOP/IIOP or DCOM, which are normally filtered by firewalls. SOAP over AMQP is yet another possibility that some implementations support. SOAP also has an advantage over DCOM that it is unaffected by security rights configured on the machines that require knowledge of both transmitting and receiving nodes. This lets SOAP be loosely coupled in a way that is not possible with DCOM. There is also the SOAP-over-UDP OASIS standard. Message format[edit] XML Information Set was chosen as the standard message format because of its widespread use by major corporations and open source development efforts. Typically, XML Information Set is serialized as XML. A wide variety of freely available tools significantly eases the transition to a SOAP-based implementation. The somewhat lengthy syntax of XML can be both a benefit and a drawback. While it promotes readability for humans, facilitates error detection, and avoids interoperability problems such as byte-order (endianness), it can slow processing speed and can be cumbersome. For example, CORBA, GIOP, ICE, and DCOM use much shorter, binary message formats. On the other hand, hardware appliances are available to accelerate processing of XML messages.[6][7] Binary XML is also being explored as a means for streamlining the throughput requirements of XML. XML messages by their self-documenting nature usually have more 'overhead' (Headers, footers, nested tags, delimiters) than actual data in contrast to earlier protocols where the overhead was usually a relatively small percentage of the overall message. In financial messaging SOAP was found to result in a 2–4 times larger message than previous protocols FIX (Financial Information Exchange) and CDR (Common Data Representation).[8] XML Information Set does not have to be serialized in XML. For instance, a CSV or JSON XML-infoset representation exists. There is also no need to specify a generic transformation framework. The concept of SOAP bindings allows for specific bindings for a specific application. The drawback is that both the senders and receivers have to support this newly defined binding. Example message[edit]   POST /InStock HTTP/1.1 Host: www.example.org Content-Type: application/soap+xml; charset=utf-8 Content-Length: 299 SOAPAction: "http://www.w3.org/2003/05/soap-envelope"  <?xml version="1.0"?> <soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">   <soap:Header>   </soap:Header>   <soap:Body>     <m:GetStockPrice xmlns:m="http://www.example.org/stock/Surya">       <m:StockName>IBM</m:StockName>     </m:GetStockPrice>   </soap:Body> </soap:Envelope>  Technical critique[edit] Advantages[edit] SOAP is versatile enough to allow for the use of different transport protocols. The standard stacks use HTTP as a transport protocol, but other protocols such as SMTP can also be used. SOAP can also be used over JMS and Message Queues.Since the SOAP model tunnels fine in the HTTP post/response model, it can tunnel easily over existing firewalls and proxies, without modifications to the SOAP protocol, and can use the existing infrastructure. Disadvantages[edit] When using standard implementations and the default SOAP/HTTP binding, the XML infoset is serialized as XML. Because of the verbose XML format, SOAP can be considerably slower than competing middleware technologies such as CORBA or ICE.[9] This may not be an issue when only small messages are sent.[10] To improve performance for the special case of XML with embedded binary objects, the Message Transmission Optimization Mechanism was introduced.When relying on HTTP as a transport protocol and not using WS-Addressing or an ESB, the roles of the interacting parties are fixed. Only one party (the client) can use the services of the other. Developers must use polling instead of notification in these common cases.The verbosity of the protocol led to the domination in the field by services leveraging the REST architectural style.[11] See also[edit]  SOAP with AttachmentsSOAP with Attachments API for JavaSOAP-over-UDPList of web service protocolsMessage Transmission Optimization Mechanism (MTOM)XML-binary Optimized Packaging (XOP)Extensible User Interface Protocol (XUP) –  a SOAP-based UI protocolSOAPjr –  a hybrid of SOAP and JSON-RPCWebSocketWeb Services Security  References[edit]  ^ Hirsch, Frederick; Kemp, John; Ilkka, Jani (2007). Mobile Web Services: Architecture and Implementation. John Wiley & Sons. p. 27. ISBN 9780470032596. Retrieved 2014-09-15. Simple Object Access Protocol (SOAP) defines a messaging envelope structure designed to carry application payload in one portion of the envelope (the message body) and control information in another (the message header). ^ "Exclusive .NET Developer's Journal "Indigo" Interview with Microsoft's Don Box". Dotnet.sys-con.com. Retrieved 2012-10-04. ^ "SOAP Specifications". W3.org. Retrieved 2014-03-29. ^ "W3C XML Protocol Working Group". W3.org. Retrieved 2014-03-29. ^ "SOAP Version 1.2 Part 1: Messaging Framework (Second Edition)". W3C. April 27, 2007. Retrieved 2012-06-15. Note: In previous versions of this specification the SOAP name was an acronym. This is no longer the case. (Underneath section 1. Introduction) ^ "IBM Datapower". 306.ibm.com. 2011-11-30. Retrieved 2012-10-04. ^ "IBM Zurich XML Accelerator Engine" (PDF). Retrieved 2012-10-04. ^ "Evaluating SOAP for High Performance Business Applications: Real-Time Trading Systems". Tenermerx Pty Ltd University of Technology, Sydney. 2011-11-30. Retrieved 2013-03-14. ^ M. Riad, Alaa; E. Hassan, Ahmed; F. Hassan, Qusay (2009). "Investigating Performance of XML Web Services in Real-Time Business Systems". Journal of Computer Science & Systems Biology 02 (05): 266–271. doi:10.4172/jcsb.1000041. ^ Olson, Mike; Ogbuji, Uche (July 3, 2002). "The Python Web services developer: Messaging technologies compared". IBM developerWorks. Retrieved 2011-02-01. ^ "REST in peace, SOAP". PingdomWorks. October 15, 2010.   Further reading[edit] Benoît Marchal, "Soapbox: Why I'm using SOAP", IBMUche Ogbuji, "Tutorial: XML messaging with SOAP", Principal Consultant, Fourthought, Inc. External links[edit] W3C SOAP pageSOAP Version 1.2 specificationCreate SOAP Message in Java    vte  World Wide Web Consortium (W3C) Products and standards  Recommendations  ARIACanonical XMLCDFCSSDOMGeolocation APIHTML (HTML5)ITSMathMLOWLP3PPLSRDFRDF SchemaSISRSKOSSMILSOAPSRGSSSMLSVGSPARQLTimed textVoiceXMLWeb storageWSDLXFormsXHTMLXHTML+RDFaXIncludeXLinkXMLXML BaseXML EncryptionXML EventsXML Information SetXML namespaceXML SchemaXML SignatureXOPXPathXPath 2.0XPointerXProcXQueryXSLXSL-FOXSLT (elements)  Notes  XAdESXHTML+SMILXUP  Working drafts  CCXMLCURIEEMEInkMLJSON-LDMSERIFSCXMLSMIL TimesheetssXBLWICDXFDLXFramesXBLXMLHttpRequest  Guidelines  Web Content Accessibility Guidelines  Initiative  Multimodal Interaction Activity (MMI)Markup Validation ServiceWeb Accessibility InitiativeWebPlatform  Deprecated  C-HTMLHDMLJSSSPGMLVMLXHTML+MathML+SVG   Organizations    World Wide Web Foundation  Working groups  SVGCSSHTMLWebOnt (Semantic Web Activity)Device Description (DDWG)Web Hypertext Application Technology (WHATWG)   Software    CERN httpdLibwww  Browsers  Line Mode (1990–)Arena (1993–98)Agora (1994–97)Argo (1994–97)Amaya (browser/editor, 1996–2012)   Conferences  International World Wide Web Conference (IW3C) Steering Committee (IW3C2)First conference ("WWW1", 1994)                        Retrieved from "https://en.wikipedia.org/w/index.php?title=SOAP&oldid=674028486"          Categories: World Wide Web Consortium standardsApplication layer protocolsXML-based standardsRemote procedure callData serialization formatsHidden categories: Wikipedia introduction cleanup from June 2012All pages needing cleanupArticles covered by WikiProject Wikify from June 2012All articles covered by WikiProject WikifyAll articles with unsourced statementsArticles with unsourced statements from August 2011                      Navigation menu                      Personal tools       Create accountLog in                                  Namespaces       ArticleTalk                                      Variants                                                                     Views       ReadEditView history                        More                                                       Search                                                                                     Navigation               Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store                   Interaction               HelpAbout WikipediaCommunity portalRecent changesContact page                   Tools               What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page                   Print/export               Create a bookDownload as PDFPrintable version                   Languages               ?????????????????????Catal?ÈeštinaDanskDeutschEestiEspa?olEsperantoEuskara?????FrançaisGalego???HrvatskiBahasa IndonesiaÍslenskaItaliano?????Magyar??????Nederlands???Norsk bokm?lPolskiPortugu?s???????Simple EnglishSlovenèinaSuomiSvenska????????Türkçe??????????????Ti?ng Vi?tYor?bá??     Edit links                          This page was last modified on 1 August 2015, at 03:38.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.        Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersMobile view