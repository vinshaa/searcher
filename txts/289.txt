Canvas element                    From Wikipedia, the free encyclopedia                            Jump to:     navigation,      search          This article is about the HTML element.  For the general element in user interfaces, see Canvas (GUI). HTML   HTMLDynamic HTML    HTML5 (audiocanvasvideo)    XHTML (BasicMobile ProfileC-HTML)  HTML element (span and div)  HTML attributeHTML frameHTML editor  Character encodings (Unicode)Language codeDocument Object ModelBrowser Object ModelStyle sheets (Cascading (CSS))  Font familyWeb colors  HTML scripting  JavaScript (WebGLWebCL)  W3C (Validator)  WHATWGQuirks modeWeb storage  Web browser (layout) engine Comparisons  Document markup languagesWeb browsers Layout engine support   HTMLNon-standard HTML    HTML5 (canvasmedia)  XHTML (1.1)    vte   The canvas element is part of HTML5 and allows for dynamic, scriptable rendering of 2D shapes and bitmap images. It is a low level, procedural model that updates a bitmap and does not have a built-in scene graph.    Contents  1 History2 Usage3 Example4 Canvas element size versus drawing surface size5 Canvas versus Scalable Vector Graphics (SVG)6 Reactions 6.1 Intellectual property over canvas 7 Browser support8 See also9 References10 External links   History[edit] Canvas was initially introduced by Apple for use inside their own Mac OS X WebKit component in 2004,[1] powering applications like Dashboard widgets and the Safari browser. Later, in 2005 it was adopted in version 1.8 of Gecko browsers,[2] and Opera in 2006,[3] and standardized by the Web Hypertext Application Technology Working Group (WHATWG) on new proposed specifications for next generation web technologies.[citation needed] Usage[edit] Canvas consists of a drawable region defined in HTML code with height and width attributes. JavaScript code may access the area through a full set of drawing functions similar to those of other common 2D APIs, thus allowing for dynamically generated graphics. Some anticipated uses of canvas include building graphs, animations, games, and image composition. Example[edit] The following code creates a Canvas element in an HTML page:   <canvas id="example" width="200" height="200"> This text is displayed if your browser does not support HTML5 Canvas. </canvas>  Using JavaScript, you can draw on the canvas:   var example = document.getElementById('example'); var context = example.getContext('2d'); context.fillStyle = 'red'; context.fillRect(30, 30, 50, 50);  This code draws a red rectangle on the screen. The Canvas API also provides save() and restore(), for saving and restoring all the canvas context’s attributes. Canvas element size versus drawing surface size[edit] A canvas actually has two sizes: the size of the element itself and the size of the element’s drawing surface. Setting the element's width and height attributes sets both of these sizes; CSS attributes affect only the element’s size and not the drawing surface. By default, both the canvas element’s size and the size of its drawing surface is 300 screen pixels wide and 150 screen pixels high. In the listing shown in the example, which uses CSS to set the canvas element’s size, the size of the element is 600 pixels wide and 300 pixels high, but the size of the drawing surface remains unchanged at the default value of 300 pixels × 150 pixels. When a canvas element’s size does not match the size of its drawing surface, the browser scales the drawing surface to fit the element (which may result in surprising and unwanted effects). Example on setting element size and drawing surface size to different values:   <!DOCTYPE html> <html> <head> <title>Canvas element size: 600 x 300, Canvas drawing surface size: 300 x 150</title> <style> body { background: #dddddd; } #canvas { margin: 20px; padding: 20px; background: #ffffff; border: thin inset #aaaaaa; width: 600px; height: 300px; } </style> </head> <body> <canvas id="canvas"> Canvas not supported </canvas> </body> </html>  Canvas versus Scalable Vector Graphics (SVG)[edit] SVG is an earlier standard for drawing shapes in browsers. However, unlike canvas, which is raster-based, SVG is vector-based, i.e., each drawn shape is remembered as an object in a scene graph or Document Object Model, which is subsequently rendered to a bitmap. This means that if attributes of an SVG object are changed, the browser can automatically re-render the scene. In the canvas example above, once the rectangle is drawn, the fact that it was drawn is forgotten by the system. If its position were to be changed, the entire scene would need to be redrawn, including any objects that might have been covered by the rectangle. But in the equivalent SVG case, one could simply change the position attributes of the rectangle and the browser would determine how to repaint it. There are additional JavaScript libraries that add scene-graph capabilities to the canvas element. It is also possible to paint a canvas in layers and then recreate specific layers. SVG images are represented in XML, and complex scenes can be created and maintained with XML editing tools. The SVG scene graph enables event handlers to be associated with objects, so a rectangle may respond to an onClick event. To get the same functionality with canvas, one must manually match the coordinates of the mouse click with the coordinates of the drawn rectangle to determine whether it was clicked. Conceptually, canvas is a lower-level API upon which an engine, supporting for example SVG, might be built. There are JavaScript libraries that provide partial SVG implementations using canvas for browsers that do not provide SVG but support canvas, such as the browsers in Android 2.x. However, this is not (normally) the case—they are independent standards. The situation is complicated because there are scene graph libraries for canvas, and SVG has some bitmap manipulation functionality. Reactions[edit] At the time of its introduction the canvas element was met with mixed reactions from the web standards community. There have been arguments against Apple's decision to create a new proprietary element instead of supporting the SVG standard. There are other concerns about syntax, e.g., the absence of a namespace.[4] Intellectual property over canvas[edit] On March 14, 2007, WebKit developer Dave Hyatt forwarded an email from Apple's Senior Patent Counsel, Helene Plotka Workman,[5] which stated that Apple reserved all intellectual property rights relative to WHATWG’s Web Applications 1.0 Working Draft, dated March 24, 2005, Section 10.1, entitled “Graphics: The bitmap canvas”,[6] but left the door open to licensing the patents should the specification be transferred to a standards body with a formal patent policy. This caused considerable discussion among web developers, and raised questions concerning the WHATWG's lack of a policy on patents in comparison to the World Wide Web Consortium (W3C)'s explicit favoring of royalty-free licenses. Apple later disclosed the patents under the W3C's royalty-free patent licensing terms.[7] The disclosure means that Apple is required to provide royalty-free licensing for the patent whenever the Canvas element becomes part of a future W3C recommendation created by the HTML working group.[8] Browser support[edit] The element is supported by the current versions of Mozilla Firefox, Google Chrome, Internet Explorer, Safari, Konqueror and Opera.[9] Older versions of Internet Explorer, version 8 and earlier do not support canvas, however Google and Mozilla plugins are available.[10] A detailed overview of the canvas support regarding the most popular browsers[11] (as a percentage of market share as of July 2013, taken from Usage share of web browsers):    Internet Explorer      Firefox      Safari (Desktop)      Chrome     Opera (Desktop)      Safari (Mobile)      Opera (Mobile)      Android Browser   6.02.0 - 6.03.1 - 3.24.0 - 13.09.0 - 11.03.210.02.07.07.04.014.011.14.011.02.18.08.05.015.011.54.2 - 4.311.12.3,3.09.09.05.116.011.65.011.54.020%17%7%36%1%4%3%5% See also[edit] Anti-Grain Geometry (AGG)Cairo (graphics)Canvas fingerprintingComparison of layout engines (HTML5 Canvas)Display PostScriptGraphics Device Interface (GDI+)Quartz 2DScalable Vector Graphics (SVG)WebGL References[edit]  ^ Ian Hixie (2004-07-12). "Extending HTML". Retrieved 2011-06-13. ^ Mozilla Developer Connection. "HTMLCanvasElement". Retrieved 2011-06-13. ^ Opera 9.0 changelog^ Ian Hickson remarks regarding canvas and other Apple extensions to HTML^ [whatwg] Web Applications 1.0 Draft, David Hyatt, Wed Mar 14 14:31:53 PDT 2007^ Web Applications 1.0 Early Working Draft - Dynamic graphics: The bitmap canvas^ HTML Working Group Patent Policy Status – Known Disclosures^ W3C patent policy in use by HTML working group^ Sucan, Mihai (4 Feb 2010). "SVG or Canvas? ?hoosing between the two". Opera Software. Retrieved 3 May 2010. ^ "Mozilla drags IE into the future with Canvas element plugin". Ars Technica. 19 Aug 2008. Retrieved 12 May 2010. ^ "Compatibility tables for the support of HTML5, CSS3, SVG". Retrieved 27 July 2011.   External links[edit] The canvas element, W3C, 2014-10-28, retrieved 2015-01-09 HTML Canvas 2D Context, W3C, 2014-08-21, retrieved 2015-01-09 Canvas description in WHATWG Web Applications draft specificationsCanvas reference page in Apple Developers ConnectionBasic Canvas Tutorial on Opera Developer CommunityCanvas tutorial and introductory page on Mozilla Developer center    vte  Web interfaces Server-side   Protocols   CGISCGIFCGIAJPWSRPWebSocket   Server APIs   C NSAPIC ASAPIC ISAPICOM ASPJava servlet container Portlet container CIL System.Web.IHttpHandlerPython WSGIRuby RackJavaScript JSGIPerl PSGILua WSAPIOWIN   Apache modules   mod_jkmod_lispmod_monomod_parrotmod_perlmod_phpmod_proxymod_pythonmod_wsgimod_rubyPhusion Passenger   Topics   Web resource vs. Web serviceOpen APIWebhookApplication server comparison    Client-side   Browser APIs   C NPAPI LiveConnectXPConnect C NPRuntimeC PPAPI NaCl ActiveX   Web APIs    W3C   AudioCanvasCORSFileGeolocationIndexedDBMicrodataSSESVGVideoWebRTCWebSocketWeb messagingWeb storageWeb workerXMLHttpRequest   Khronos   WebCLWebGL   Others   GearsWeb SQL Database (formerly W3C)    Topics   MashupWeb IDL                        Retrieved from "https://en.wikipedia.org/w/index.php?title=Canvas_element&oldid=672847187"          Categories: HTML tagsHTMLHidden categories: All articles with unsourced statementsArticles with unsourced statements from February 2011                      Navigation menu                      Personal tools       Create accountLog in                                  Namespaces       ArticleTalk                                      Variants                                                                     Views       ReadEditView history                        More                                                       Search                                                                                     Navigation               Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store                   Interaction               HelpAbout WikipediaCommunity portalRecent changesContact page                   Tools               What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page                   Print/export               Create a bookDownload as PDFPrintable version                   Languages               ÈeštinaDeutschEspa?olFrançaisBahasa IndonesiaItalianoLatviešuMagyar???PolskiPortugu?s????????????? / srpski??????????Ti?ng Vi?t??     Edit links                          This page was last modified on 24 July 2015, at 07:37.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.        Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersMobile view