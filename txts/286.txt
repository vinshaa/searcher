Google Native Client                    From Wikipedia, the free encyclopedia                            Jump to:     navigation,      search          Not to be confused with Networking and Cryptography library. Google Native ClientDeveloper(s)Google, othersStable release SDK: Pepper 43 (3 April 2015; 4 months ago (2015-04-03)), Client: Windows, OS X, Linux 44.0.2403.157 (August 20, 2015; 6 days ago (2015-08-20)[1]) [±]Development statusProduction (NaCl, PNaCl[2])Written inC, C++Operating systemCross-platform: Microsoft Windows, Linux, OS X, Chrome OSPlatformx86, x64, ARM, MIPSTypeSandbox in web browsers for native codeLicenseNew BSD licenseWebsitedeveloper.chrome.com/native-client Google Native Client (NaCl) is a sandboxing technology for running a subset of Intel x86/x64, ARM or MIPS native code in a sandbox. It allows safely running native code from a web browser, independent of the user operating system, allowing web-based applications to run at near-native speeds, which aligns with Google's plans for Chrome OS. It may also be used for securing browser plugins, as well as parts of other applications or full applications[3] such as ZeroVM.[4] To demonstrate the readiness of the technology, on 9 December 2011, Google announced the availability of several new Chrome-only versions of games known for their rich and processor-intensive graphics, including Bastion (Bastion is no longer supported on the Chrome Web Store). NaCl runs hardware-accelerated 3D graphics (via OpenGL ES 2.0), sandboxed local file storage, dynamic loading, full screen mode, and mouse capture. There are also plans to make NaCl available on handheld devices.[5][6] The general concept of NaCl (running native code in web browser) has been implemented before in ActiveX, which, while still in use, has a legacy of DLL hell and security problems. Native Client avoids these issues by using sandboxing. Using PNaCl, Native Client is also architecture-independent, like Java. Unlike Java, PNaCl apps are compiled ahead-of-time in the browser, and not just-in-time. This can make performance more predictable. An alternative of sorts to NaCl is asm.js, which also allows C and C++ applications to be compiled to run in the browser (at more than half the native speed), and also supports ahead-of-time compilation, but is a subset of JavaScript and hence backwards-compatible with browsers that do not support it directly.    Contents  1 Overview2 Pepper 2.1 PPAPI 3 Reception4 See also5 References6 External links 6.1 Examples    Overview[edit] Native Client is an open-source project being developed by Google.[7] To date, Quake,[8] XaoS, Battle for Wesnoth,[9] Doom,[10] Lara Croft and the Guardian of Light[11] and MAME, as well as the sound processing system Csound, have been ported to Native Client. Native Client has been available in the Google Chrome web browser since version 14, and has been enabled by default since version 31, when Portable Native Client (PNaCl, pronounced: pinnacle) was released.[12][13][14] An ARM implementation was released in March 2010.[15] x86-64, IA-32 and MIPS are also supported. To run an application portably under PNaCl, it must be compiled to an architecture-agnostic and stable subset of the LLVM intermediate representation bytecode.[16] The executables are called PNaCl executables (pexes). In Chrome, they are translated to architecture-specific executables so that they can be run. NaCl uses software fault isolation for sandboxing on x86-64 and ARM.[17] The x86-32 implementation of Native Client is notable for its novel sandboxing method which makes use of the x86 architecture's rarely used segmentation facility.[18] Native Client sets up x86 segments to restrict the memory range that the sandboxed code can access. It uses a code verifier to prevent use of unsafe instructions such as those that perform system calls. To prevent the code from jumping to an unsafe instruction hidden in the middle of a safe instruction, Native Client requires that all indirect jumps be jumps to the start of 32-byte-aligned blocks, and instructions are not allowed to straddle these blocks.[18] Because of these constraints, C/C++ code must be recompiled to run under Native Client, which provides customized versions of the GNU toolchain, specifically GCC and binutils as well as LLVM. Native Client is licensed under a BSD-style license. Native Client uses Newlib as its C library, but a port of GNU libc is also available.[19] Pepper[edit] See also: NPAPI § PPAPI NaCl denotes table salt; as a pun, the name of pepper was also used. Pepper API is a cross-platform, open-source API for creating Native Client modules.[20] Pepper Plugin API, or PPAPI[21][22] is a cross-platform API for Native Client-secured web browser plugins, first based on Netscape's NPAPI, then rewritten from scratch. It is currently used in Chromium and Google Chrome to enable the PPAPI version of Flash[23] and the built-in PDF viewer.[24] PPAPI[edit] On 12 August 2009 a page on Google Code introduced a new project, Pepper with associated Pepper Plugin API (PPAPI),[25] "a set of modifications to NPAPI to make plugins more portable and more secure".[26] This extension is designed specifically to ease the implementation of out-of-process plugin execution. Further, the goals of the project are to provide a framework for making plugins fully cross-platform. Topics considered include: Uniform semantics for NPAPI across browsers.Execution in a separate process from the renderer/browser itself.Standardize rendering using the browser's compositing process.Defining standardized events, and 2D rasterization functions.Initial attempt at providing 3D graphics access.Plugin registry. The continuously evolving Pepper API also supports Gamepads (version 19) and WebSockets (version 18).[27] As of 13 May 2010[update], Google's open source browser, Chromium, was the only web browser to utilize the new browser plug-in model.[28] Mozilla has announced that they are "not interested in or working on Pepper at this time."[29] As of 2015, Pepper is supported by Chrome, Chromium and Opera. Go Playground currently uses NaCL (runtime.GOOS == "nacl")to allow users to experiment with the language in their browsers. Reception[edit] Some groups of browser developers support the Native Client technology, but others do not. Supporters: Chad Austin (of IMVU) praised the way Native Client can bring high-performance applications to the web (with about 5% penalty compared to native code) in a secure way, while also accelerating the evolution of client-side applications by giving a choice of the programming language used (besides JavaScript).[30] Id Software's John Carmack praised Native Client at QuakeCon 2012, saying: "if you have to do something inside a browser, Native Client is much more interesting as something that started out as a really pretty darn clever x86 hack in the way that they could sandbox all of this in user mode interestingly. It's now dynamic recompilation, but something that you program in C or C++ and it compiles down to something that's going to be not your -O4 optimization level for completely native code but pretty damn close to native code. You could do all of your evil pointer chasings, and whatever you want to do as a to-the-metal game developer."[31] Detractors: Other IT professionals are more critical of this sandboxing technology as it has substantial or substantive interoperability issues. Mozilla's vice president of products, Jay Sullivan, said that Mozilla has no intention of running native code inside the browser, as "These native apps are just little black boxes in a webpage. [...] We really believe in HTML, and this is where we want to focus."[32] Mozilla's Christopher Blizzard criticized NaCl, claiming that native code cannot evolve in the same way that the source code-driven web can. He also compared NaCl to Microsoft's ActiveX technology, plagued with DLL hell.[3] H?kon Wium Lie, Opera's CTO, believes that "NaCl seems to be 'yearning for the bad old days, before the web'", and that "Native Client is about building a new platform – or porting an old platform into the web [...] it will bring in complexity and security issues, and it will take away focus from the web platform."[3] See also[edit]  Free software portal  Application virtualizationSandboxie, running Windows programs in a sandbox References[edit]  ^ "Stable Channel Update". Chrome Releases. Blogger. August 20, 2015. Retrieved August 20, 2015. ^ Chrome Revision 213999^ a b c Cade Metz (12 September 2011). "Google Native Client: The web of the future – or the past?". The Register. Retrieved 17 September 2011. ^ "ZeroVM Architecture". Retrieved 16 March 2014. ^ Seth Rosenblatt (9 December 2011). "Native Client turns Chrome into high-end gaming platform". CNET. Retrieved 9 December 2011. ^ "Google Code Blog: Games, apps and runtimes come to Native Client". Googlecode.blogspot.com. 9 December 2011. Retrieved 25 April 2012. ^ "Google Native Client on Google Code". Google. Retrieved 25 April 2012. ^ https://github.com/davemichael/NaCl-Quake^ https://chrome.google.com/webstore/detail/the-battle-for-wesnoth/pobnonecghmlpppkkjpdiiblmakhhldb^ http://doom.pdox.net^ https://chrome.google.com/webstore/detail/lara-croft-and-the-guardi/dcfdbmpeeihbpddkneaploeinlbaaodn^ Marchak, Mike (8 December 2008). "Native Client: A Technology for Running Native Code on the Web". Google-code-updates.blogspot.com. Retrieved 25 April 2012. ^ "The Chromium Blog: Native Client Brings Sandboxed Native Code to Chrome Web Store Apps". Blog.chromium.org. 18 August 2011. Retrieved 25 April 2012. ^ "Google Code Blog: Portable Native Client: The "pinnacle" of speed, security, and portability". blog.chromium.org. 12 November 2013. Retrieved 16 March 2014. ^ "Google's Native Client goes ARM and beyond". The H. 18 March 2010. Retrieved 19 May 2010. ^ "PNaCl: Portable Native Client Executables" (PDF). Retrieved 25 April 2012. ^ David Sehr, Robert Muth, Cliff L. Biffle, Victor Khimenko, Egor Pasko, Bennet Yee, Karl Schimpf, Brad Chen (2010). "Adapting Software Fault Isolation to Contemporary CPU Architectures". 19th USENIX Security Symposium. Retrieved 31 July 2011. ^ a b Bennet Yee, David Sehr, Greg Dardyk, Brad Chen, Robert Muth, Tavis Ormandy, Shiki Okasaka, Neha Narula, Nicholas Fullagar (2009). "Native Client: A Sandbox for Portable, Untrusted x86 Native Code". IEEE Symposium on Security and Privacy (Oakland'09). Retrieved 31 July 2011. ^ "Native Client: Building". developer.chrome.com. Retrieved 16 March 2014. ^ Native Client: Technical Overview^ "Pepper Plugin API project at". Google. Retrieved 25 April 2012. ^ "Chrome Source: Index of /trunk/src/ppapi". Src.chromium.org. Retrieved 25 April 2012. ^ "The road to safer, more stable, and flashier Flash". Google. 8 August 2012. Retrieved 10 August 2013. ^ Metz, Cade (18 June 2010). "Google hugs Adobe harder with Chrome-PDF merge". The Register. Retrieved 25 April 2012. ^ "Getting Started: Background and Basics – The Chromium Projects". Chromium.org. Retrieved 25 April 2012. ^ Comment by t.hajdu....@gmail.com (24 February 2012). "Pepper.wiki". Google. Retrieved 25 April 2012. ^ Native Client: News & Announcements^ Metz, Cade (13 May 2010). "Google heats up native code for Chrome OS". Theregister.co.uk. Retrieved 25 April 2012. ^ "NPAPI:Pepper – MozillaWiki". Wiki.mozilla.org. 26 May 2011. Retrieved 25 April 2012. ^ Austin, Chad (8 January 2011). "Chad Austin: In Defense of Language Democracy (Or: Why the Browser Needs a Virtual Machine)". Chadaustin.me. Retrieved 25 April 2012. ^ Carmack, John (3 August 2012). "QuakeCon 2012". youtube.com. Retrieved 26 August 2012. ^ Metz, Cade (24 June 2010). "Mozilla: Our browser will not run native code". The Register. Retrieved 25 April 2012.   External links[edit] Native Client - Google Developers (Native Client Developer Site)Google Native Client Project PageGoogle I/O 2013 - Introduction to Portable Native Client (PNaCl) on YouTubeGoogle I/O 2009 Native Code for Compute Intensive Web Apps on YouTube – Technical talk at Google I/O 2009A list of OSS projects ported to Native ClientNative Client source code in Git Examples[edit] Folding@homePNaCl examples (runs in Chrome 31+, PNaCl, i.e. no installation needed)Native Client SDK Gallerytorapp.info, vector editor, especially powerful for security printing (not PNaCl)NACLBox, a port of DOSBox to Native Client (PNaCl)SodaSynth, a synthesizer for Native Client (not PNaCl)pnacl-amiga-emulator, a port of UAE, an Amiga 500 emulator    vte  Google Overview  Alphabet Inc.HistoryList of mergers and acquisitionsProductsCriticismCensorshipDomainsEaster eggsDon't be evil  Advertising  AdMobAdscapeAdSenseAdWordsAnalyticsContributorPartnersDoubleClickDoubleClick for PublishersWallet  Communication  AlertsApps ScriptCalendarContactsFriend ConnectGmail historyinterface Google+GroupsHangoutsInboxSyncText-to-SpeechTranslateTransliterationVoice  Software  Chrome for Androidfor iOSChrome Web StoreAppsExtensions Cloud PrintEarth SkyMoonMars GadgetsGogglesIME PinyinJapanese PhotosKeepNews & WeatherNowPicasaOpenRefineToolbar  Platforms  AccountAndroid version historysoftware developmentAndroid AutoAndroid TVAndroid Wear App EngineApps for Work Classroom AuthenticatorBigTableBodyBooks Library Project CajaCardboardChromecastChrome OS ChromebitChromebookChromeboxChrome Zone Compute EngineContact LensCustom SearchDartEarth EngineFitGlassGoGFSMarketplaceNative ClientNexusOpenSocialPlay BooksGamesMovies & TVMusicNewsstand Public DNSWallet  Development tools  AJAX APIsApp InventorClosure ToolsDevelopersGadgets APIGDataGooglebotGuavaGuiceGWSKMLKytheMapReduceSitemapsStorageSummer of CodeWeb ToolkitSearch ConsoleWebsite OptimizerSwiffy  Publishing  BloggerBookmarksDrive Docs, Sheets, Slides, Forms DomainsFeedBurnerMap MakerMy MapsPanoramioPicasa Web AlbumsSitesYouTube Vevo Zagat  Search (timeline)  ApplianceAudioBlog SearchBooksFinanceFlightsImagesMaps Street View CoverageCompetitionPrivacy concerns  News Archive PatentsScholarShoppingUsenet  Algorithms  PageRankPandaPenguinHummingbird  Features  Web HistoryPersonalizedReal-TimeInstant SearchSafeSearchVoice Search  Analysis  Insights for SearchTrendsKnowledge GraphKnowledge Vault   Discontinued  AardvarkAnswersBrowser SyncBaseBuzzCheckoutChrome FrameClick-to-CallCloud ConnectCode SearchCurrentsDesktopDictionaryDodgeballFast FlipGearsGOOG-411Google TVJaikuKnolHealthiGoogleImage LabelerLabsLatitudeLivelyMashup EditorNotebookOffersOrkutPackPage CreatorPicnikPowerMeterQ & AReaderScript ConverterSearchWikiSidewikiSlideSquaredTalkUpdaterUrchinVideosVideo MarketplaceWaveWeb Accelerator  People  Al GoreAlan EustaceAlan MulallyAmit SinghalAnn MatherDavid DrummondEric SchmidtJeff DeanJohn DoerrJohn L. HennessyKrishna BharatMatt CuttsPatrick PichettePaul OtelliniOmid KordestaniRachel WhetstoneRajen ShethRam ShriramRay KurzweilRuth PoratSalar KamangarShirley M. TilghmanSundar PichaiSusan WojcickiUrs HölzleVint Cerf  Founders  Larry PageSergey Brin   Other  Art ProjectCalicoCurrentChrome ExperimentsCode-inCode JamDeveloper DayGoogle Business GroupsData Liberation Takeout Google Developer ExpertGoogle for WorkDriverless carFiberGoogle ChinaGoogle ExpressGooglizationGrantsGoogle.orgLogoGoogle Doodles 1998–2009201020112012201320142015 Lunar X PrizeMaterial DesignMotorola MobilityVenturesWiFiX  Events  Science FairSearchologyI/ODeveloper DayAtGoogleTalksCode JamHighly Open Participation ContestCode-in  Projects  AraLoonTangoSunroof  Real estate  111 Eighth AvenueGoogleplex   Related  AI ChallengeBombGoojjeMonopoly City StreetsUnity     Category Commons Portal WikiProject Wikiversity       vte  Web interfaces Server-side   Protocols   CGISCGIFCGIAJPWSRPWebSocket   Server APIs   C NSAPIC ASAPIC ISAPICOM ASPJava servlet container Portlet container CIL System.Web.IHttpHandlerPython WSGIRuby RackJavaScript JSGIPerl PSGILua WSAPIOWIN   Apache modules   mod_jkmod_lispmod_monomod_parrotmod_perlmod_phpmod_proxymod_pythonmod_wsgimod_rubyPhusion Passenger   Topics   Web resource vs. Web serviceOpen APIWebhookApplication server comparison    Client-side   Browser APIs   C NPAPI LiveConnectXPConnect C NPRuntimeC PPAPI NaCl ActiveX   Web APIs    W3C   AudioCanvasCORSFileGeolocationIndexedDBMicrodataSSESVGVideoWebRTCWebSocketWeb messagingWeb storageWeb workerXMLHttpRequest   Khronos   WebCLWebGL   Others   GearsWeb SQL Database (formerly W3C)    Topics   MashupWeb IDL                        Retrieved from "https://en.wikipedia.org/w/index.php?title=Google_Native_Client&oldid=674026632"          Categories: Free softwareGoogleComputer security softwareHidden categories: Articles containing potentially dated statements from May 2010All articles containing potentially dated statementsUse dmy dates from April 2012                      Navigation menu                      Personal tools       Create accountLog in                                  Namespaces       ArticleTalk                                      Variants                                                                     Views       ReadEditView history                        More                                                       Search                                                                                     Navigation               Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store                   Interaction               HelpAbout WikipediaCommunity portalRecent changesContact page                   Tools               What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page                   Print/export               Create a bookDownload as PDFPrintable version                   Languages               DeutschFrançais???ItalianoMagyar????????????     Edit links                          This page was last modified on 1 August 2015, at 03:14.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.        Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersMobile view